{"ast":null,"code":"export const GET_POKEMONS = \"GET_POKEMONS\";\nexport const GET_POKEMON_DETAIL = \"GET_POKEMON_DETAIL\";\nexport const CREATE_POKEMON = \"CREATE_POKEMON\";\nexport const DELETE_POKEMON = \"CREATE_POKEMON\";\nexport const GET_TYPES = \"GET_TYPES\";\n\n//Filtos y ordenamiento\nexport const FILTER_BY_TYPE = \"FILTER_BY_TYPE\";\nexport const FILTER_BY_CREATED = \"FILTER_BY_CREATED\";\nexport const SORT_BY_ALPHABET = \"SORT_BY_ALPHABET\";\nexport const SORT_BY_ATTACK = \"SORT_BY_ATTACK\";\nexport const SEARCH_POKEMON = \"SEARCH_POKEMON\";\nexport const getPokemons = () => {\n  return function (dispatch) {\n    return fetch('http://localhost:3001/pokemons').then(res => res.json()).then(pokemons => dispatch({\n      type: GET_POKEMONS,\n      payload: pokemons\n    }));\n  };\n};\nexport const getPokemonDetail = id => {\n  return function (dispatch) {\n    return fetch(`http://localhost:3001/pokemons/${id}`).then(res => res.json()).then(data => dispatch({\n      type: GET_POKEMON_DETAIL,\n      payload: data[0]\n    }, console.log('data[0] in actions', data[0])));\n  };\n};\nexport const createPokemon = pokemon => {\n  return async function (dispatch) {\n    const newPokemon = await fetch(``);\n  };\n  //return { type: CREATE_POKEMON, payload: pokemon}\n};\n\nexport const deletePokemon = id => {\n  return {\n    type: DELETE_POKEMON,\n    payload: id\n  };\n};\nexport const getTypes = () => {\n  return function (dispatch) {\n    return fetch('http://localhost:3001/types').then(res => res.json()).then(pokemons => {\n      let types = [];\n      pokemons.map(pokemon => types.push(pokemon.ship));\n      dispatch({\n        type: GET_TYPES,\n        payload: types\n      });\n    });\n  };\n};\nexport const sortByAlphabet = payload => {\n  return {\n    type: SORT_BY_ALPHABET,\n    payload\n  };\n};\nexport const sortByAttack = payload => {\n  return {\n    type: SORT_BY_ATTACK,\n    payload\n  };\n};\n\n// export const filterByType = (query) => ( getstate) => {\n//     const { pokemons } = getstate()\n\n//     let resultType = pokemons.filter((p) => p.type.toLowerCase().includes(query.toLowerCase()))\n\n//     return ({type: FILTER_BY_TYPE, payload: resultType})\n// }\nexport const filterByType = filter => {\n  return {\n    type: FILTER_BY_TYPE,\n    payload: filter\n  };\n};\nexport const filterByCreated = payload => {\n  return {\n    type: FILTER_BY_CREATED,\n    payload\n  };\n};\n\n// export const filterByCreated = (query) => (dispatch, getstate) => {\n//         const { pokemons } = getstate()\n//         const results = pokemons.searchPokemon.filter((poke) => poke.type === query);\n//      dispatch ({type: FILTER_BY_CREATED, payload: results}\n// }\n\nexport const searchPokemon = query => (dispatch, getstate) => {\n  const {\n    pokemons\n  } = getstate();\n  const result = pokemons.searchPokemon.find(poke => poke.name.toLowerCase().includes(query.toLowerCase()));\n  dispatch({\n    type: SEARCH_POKEMON,\n    payload: result\n  });\n};","map":{"version":3,"names":["GET_POKEMONS","GET_POKEMON_DETAIL","CREATE_POKEMON","DELETE_POKEMON","GET_TYPES","FILTER_BY_TYPE","FILTER_BY_CREATED","SORT_BY_ALPHABET","SORT_BY_ATTACK","SEARCH_POKEMON","getPokemons","dispatch","fetch","then","res","json","pokemons","type","payload","getPokemonDetail","id","data","console","log","createPokemon","pokemon","newPokemon","deletePokemon","getTypes","types","map","push","ship","sortByAlphabet","sortByAttack","filterByType","filter","filterByCreated","searchPokemon","query","getstate","result","find","poke","name","toLowerCase","includes"],"sources":["C:/Users/Nicolas/Documents/Nico/Henry/PI/PI-Pokemon-main/client/src/redux/actions.js"],"sourcesContent":["\r\nexport const GET_POKEMONS = \"GET_POKEMONS\";\r\nexport const GET_POKEMON_DETAIL = \"GET_POKEMON_DETAIL\";\r\nexport const CREATE_POKEMON = \"CREATE_POKEMON\";\r\nexport const DELETE_POKEMON = \"CREATE_POKEMON\";\r\nexport const GET_TYPES = \"GET_TYPES\";\r\n\r\n//Filtos y ordenamiento\r\nexport const FILTER_BY_TYPE = \"FILTER_BY_TYPE\";\r\nexport const FILTER_BY_CREATED = \"FILTER_BY_CREATED\";\r\nexport const SORT_BY_ALPHABET = \"SORT_BY_ALPHABET\";\r\nexport const SORT_BY_ATTACK = \"SORT_BY_ATTACK\";\r\n\r\nexport const SEARCH_POKEMON = \"SEARCH_POKEMON\";\r\n\r\n\r\nexport const getPokemons = () => {\r\n    return function(dispatch) {\r\n        \r\n        return fetch('http://localhost:3001/pokemons')\r\n        .then(res => res.json())\r\n        .then(pokemons => dispatch(\r\n            {type: GET_POKEMONS, payload: pokemons}\r\n        ))\r\n    }\r\n};\r\n\r\nexport const getPokemonDetail = (id) => {\r\n    return function(dispatch) {\r\n        return fetch(`http://localhost:3001/pokemons/${id}`)\r\n        .then(res => res.json())\r\n        .then(data => dispatch(\r\n            {type: GET_POKEMON_DETAIL, payload: data[0]},\r\n            console.log('data[0] in actions', data[0])\r\n        ))\r\n    }\r\n};\r\n\r\nexport const createPokemon = (pokemon) => {\r\n    return async function(dispatch){\r\n        const newPokemon = await fetch(``)\r\n    }\r\n    //return { type: CREATE_POKEMON, payload: pokemon}\r\n};\r\n\r\nexport const deletePokemon = (id) => {\r\n    return { type: DELETE_POKEMON, payload: id}\r\n};\r\n\r\nexport const getTypes = () => {\r\n    return function(dispatch){\r\n        return fetch('http://localhost:3001/types')\r\n        .then(res => res.json())\r\n        .then(pokemons => {\r\n            let types = [];\r\n            pokemons.map((pokemon) => types.push(pokemon.ship))\r\n            dispatch ({type: GET_TYPES, payload: types})\r\n        }\r\n        )\r\n    }\r\n};\r\n\r\nexport const sortByAlphabet = (payload) => {\r\n    return ({type: SORT_BY_ALPHABET, payload});\r\n}\r\n\r\nexport const sortByAttack = (payload) => {\r\n    return {type: SORT_BY_ATTACK, payload}\r\n}\r\n\r\n// export const filterByType = (query) => ( getstate) => {\r\n//     const { pokemons } = getstate()\r\n    \r\n//     let resultType = pokemons.filter((p) => p.type.toLowerCase().includes(query.toLowerCase()))\r\n\r\n//     return ({type: FILTER_BY_TYPE, payload: resultType})\r\n// }\r\nexport const filterByType = (filter) => {\r\n    return {type: FILTER_BY_TYPE, payload: filter}\r\n}\r\n\r\nexport const filterByCreated = (payload) => {\r\n    return {type: FILTER_BY_CREATED, payload}\r\n}\r\n\r\n// export const filterByCreated = (query) => (dispatch, getstate) => {\r\n//         const { pokemons } = getstate()\r\n//         const results = pokemons.searchPokemon.filter((poke) => poke.type === query);\r\n//      dispatch ({type: FILTER_BY_CREATED, payload: results}\r\n// }\r\n\r\nexport const searchPokemon = (query) => (dispatch, getstate) => {\r\n    const { pokemons } = getstate()\r\n    const result = pokemons.searchPokemon.find((poke) => poke.name.toLowerCase().includes(query.toLowerCase()));\r\n    dispatch({ type: SEARCH_POKEMON, payload: result})\r\n} \r\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}