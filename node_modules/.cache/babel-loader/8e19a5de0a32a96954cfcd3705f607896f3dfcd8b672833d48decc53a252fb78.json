{"ast":null,"code":"import axios from 'axios';\nexport const GET_POKEMONS = \"GET_POKEMONS\";\nexport const GET_POKEMON_DETAIL = \"GET_POKEMON_DETAIL\";\nexport const CREATE_POKEMON = \"CREATE_POKEMON\";\nexport const DELETE_POKEMON = \"DELETE_POKEMON\";\nexport const UPDATE_POKEMON = \"UPDATE_POKEMON\";\nexport const GET_TYPES = \"GET_TYPES\";\nexport const CLEAN_POKEMON = \"CLEAN_POKEMON\";\n\n//Filtos y ordenamiento\nexport const FILTER_BY_TYPE = \"FILTER_BY_TYPE\";\nexport const FILTER_BY_CREATED = \"FILTER_BY_CREATED\";\nexport const SORT_BY_ALPHABET = \"SORT_BY_ALPHABET\";\nexport const SORT_BY_ATTACK = \"SORT_BY_ATTACK\";\nexport const CLEAN_FILTER = \"CLEAR_FILTER\";\nexport const SEARCH_POKEMON = \"SEARCH_POKEMON\";\nexport const getPokemons = () => {\n  return function (dispatch) {\n    //return fetch('https://pokemonapi-jzai.onrender.com/pokemons')\n\n    //return fetch('http://localhost:3001/pokemons')\n    return fetch('http://pokemonback.up.railway.app/pokemons').then(res => res.json()).then(pokemons => dispatch({\n      type: GET_POKEMONS,\n      payload: pokemons\n    }));\n  };\n};\nexport const getPokemonDetail = id => {\n  return async function (dispatch) {\n    //return fetch(`https://pokemonapi-jzai.onrender.com/pokemons/${id}`)    \n    //return fetch(`http://localhost:3001/pokemons/${id}`)    \n\n    return fetch(`http://pokemonback.up.railway.app/pokemons/${id}`).then(res => res.json()).then(data => dispatch({\n      type: GET_POKEMON_DETAIL,\n      payload: data[0]\n    }));\n  };\n};\nexport const searchPokemon = name => {\n  return async function (dispatch) {\n    try {\n      //let info =  await axios.get(\"https://pokemonapi-jzai.onrender.com/pokemons?name=\" + name);\n      // let info =  await axios.get(\"http://localhost:3001/pokemons?name=\" + name);\n      let info = await axios.get(\"http://pokemonback.up.railway.app?name=\" + name);\n      return dispatch({\n        type: \"SEARCH_POKEMON\",\n        payload: info.data\n      });\n    } catch (error) {\n      return 'We couldnt find that Pokemon';\n    }\n  };\n};\nexport const createPokemon = pokemon => {\n  return async function (dispatch) {\n    //const newPokemon = await axios.post(`http://localhost:3001/pokemons/`, pokemon)\n\n    const newPokemon = await axios.post(`http://pokemonback.up.railway.app/pokemons/`, pokemon);\n    //const newPokemon = await axios.post(`https://pokemonapi-jzai.onrender.com/pokemons/`, pokemon)\n    dispatch({\n      type: CREATE_POKEMON,\n      payload: newPokemon\n    });\n  };\n};\nexport const updatePokemon = updatePoke => {\n  return async function (dispatch) {\n    //va la ruta del poke que tiene que actualizar\n    //await axios.put(`http://localhost:3001/pokemons/${updatePoke.id}`, updatePoke)\n\n    await axios.put(`http://pokemonback.up.railway.app/pokemons/${updatePoke.id}`, updatePoke)\n    //await axios.put(`https://pokemonapi-jzai.onrender.com/pokemons/${updatePoke.id}`, updatePoke)\n    .then(res => {\n      dispatch({\n        type: UPDATE_POKEMON,\n        payload: res.data\n      }); //res.data da OK\n    }).catch(err => {\n      console.log(err);\n    });\n  };\n};\nexport const deletePokemon = pokemonId => {\n  return async function (dispatch) {\n    //const deletePoke = await axios.delete(`http://localhost:3001/pokemons/${pokemonId}`, pokemonId )\n    const deletePoke = await axios.delete(`http://pokemonback.up.railway.app/pokemons/${pokemonId}`, pokemonId);\n\n    // const deletePoke = await axios.delete(`https://pokemonapi-jzai.onrender.com/pokemons/${pokemonId}`, pokemonId )\n    dispatch({\n      type: DELETE_POKEMON,\n      payload: deletePoke\n    });\n  };\n};\nexport const getTypes = () => {\n  return async function (dispatch) {\n    //let info = await axios.get('http://localhost:3001/types', {})\n\n    let info = await axios.get('http://pokemonback.up.railway.app/types', {});\n    //let info = await axios.get('https://pokemonapi-jzai.onrender.com/types', {})\n    return dispatch({\n      type: GET_TYPES,\n      payload: info.data\n    });\n  };\n};\nexport const filterByCreated = value => {\n  //el payload va a ser api, db o all. Depende de lo q eleija el usuario\n  return {\n    type: FILTER_BY_CREATED,\n    payload: value\n  };\n};\nexport const filterByType = filter => {\n  return {\n    type: FILTER_BY_TYPE,\n    payload: filter\n  };\n};\nexport const sortByAlphabet = order => {\n  return {\n    type: SORT_BY_ALPHABET,\n    payload: order\n  };\n};\nexport const sortByAttack = order => {\n  return {\n    type: SORT_BY_ATTACK,\n    payload: order\n  };\n};\nexport const cleanFilter = () => {\n  return {\n    type: CLEAN_FILTER\n  };\n};\nexport const cleanPokemon = () => {\n  return {\n    type: CLEAN_POKEMON,\n    payload: {}\n  };\n};","map":{"version":3,"names":["axios","GET_POKEMONS","GET_POKEMON_DETAIL","CREATE_POKEMON","DELETE_POKEMON","UPDATE_POKEMON","GET_TYPES","CLEAN_POKEMON","FILTER_BY_TYPE","FILTER_BY_CREATED","SORT_BY_ALPHABET","SORT_BY_ATTACK","CLEAN_FILTER","SEARCH_POKEMON","getPokemons","dispatch","fetch","then","res","json","pokemons","type","payload","getPokemonDetail","id","data","searchPokemon","name","info","get","error","createPokemon","pokemon","newPokemon","post","updatePokemon","updatePoke","put","catch","err","console","log","deletePokemon","pokemonId","deletePoke","delete","getTypes","filterByCreated","value","filterByType","filter","sortByAlphabet","order","sortByAttack","cleanFilter","cleanPokemon"],"sources":["C:/Users/Nicolas/Documents/Nico/Henry/PI/deployPoke/client/src/redux/actions.js"],"sourcesContent":["import axios from 'axios';\r\n\r\nexport const GET_POKEMONS = \"GET_POKEMONS\";\r\nexport const GET_POKEMON_DETAIL = \"GET_POKEMON_DETAIL\";\r\nexport const CREATE_POKEMON = \"CREATE_POKEMON\";\r\nexport const DELETE_POKEMON = \"DELETE_POKEMON\";\r\nexport const UPDATE_POKEMON = \"UPDATE_POKEMON\";\r\nexport const GET_TYPES = \"GET_TYPES\";\r\nexport const CLEAN_POKEMON = \"CLEAN_POKEMON\";\r\n\r\n//Filtos y ordenamiento\r\nexport const FILTER_BY_TYPE = \"FILTER_BY_TYPE\";\r\nexport const FILTER_BY_CREATED = \"FILTER_BY_CREATED\";\r\nexport const SORT_BY_ALPHABET = \"SORT_BY_ALPHABET\";\r\nexport const SORT_BY_ATTACK = \"SORT_BY_ATTACK\";\r\nexport const CLEAN_FILTER = \"CLEAR_FILTER\"\r\n\r\nexport const SEARCH_POKEMON = \"SEARCH_POKEMON\";\r\n\r\nexport const getPokemons = () => {\r\n    return function(dispatch) {\r\n        //return fetch('https://pokemonapi-jzai.onrender.com/pokemons')\r\n        \r\n        //return fetch('http://localhost:3001/pokemons')\r\n        return fetch('http://pokemonback.up.railway.app/pokemons')\r\n        \r\n        .then(res => res.json())\r\n        .then(pokemons => dispatch(\r\n            {type: GET_POKEMONS, payload: pokemons}\r\n        ))\r\n    }\r\n};\r\n\r\nexport const getPokemonDetail = (id) => {\r\n    return async function(dispatch) {\r\n        //return fetch(`https://pokemonapi-jzai.onrender.com/pokemons/${id}`)    \r\n        //return fetch(`http://localhost:3001/pokemons/${id}`)    \r\n        \r\n        return fetch(`http://pokemonback.up.railway.app/pokemons/${id}`)    \r\n        .then(res => res.json())\r\n        .then(data => dispatch(\r\n            {type: GET_POKEMON_DETAIL, payload: data[0]}\r\n        ))\r\n    }\r\n};\r\n\r\nexport const searchPokemon = (name) => {\r\n    return async function(dispatch) {\r\n        try {\r\n            //let info =  await axios.get(\"https://pokemonapi-jzai.onrender.com/pokemons?name=\" + name);\r\n            // let info =  await axios.get(\"http://localhost:3001/pokemons?name=\" + name);\r\n            let info =  await axios.get(\"http://pokemonback.up.railway.app?name=\" + name);\r\n            return dispatch({\r\n                type: \"SEARCH_POKEMON\",\r\n                payload: info.data\r\n            })\r\n        } catch(error){\r\n            return 'We couldnt find that Pokemon'\r\n        } \r\n    }\r\n} \r\n\r\nexport const createPokemon = (pokemon) => {\r\n    return async function(dispatch){\r\n        //const newPokemon = await axios.post(`http://localhost:3001/pokemons/`, pokemon)\r\n\r\n        const newPokemon = await axios.post(`http://pokemonback.up.railway.app/pokemons/`, pokemon)\r\n        //const newPokemon = await axios.post(`https://pokemonapi-jzai.onrender.com/pokemons/`, pokemon)\r\n       dispatch({type: CREATE_POKEMON, payload: newPokemon})\r\n    }\r\n};\r\n\r\nexport const updatePokemon = (updatePoke) => {\r\n    return async function(dispatch){ //va la ruta del poke que tiene que actualizar\r\n        //await axios.put(`http://localhost:3001/pokemons/${updatePoke.id}`, updatePoke)\r\n\r\n        await axios.put(`http://pokemonback.up.railway.app/pokemons/${updatePoke.id}`, updatePoke)\r\n        //await axios.put(`https://pokemonapi-jzai.onrender.com/pokemons/${updatePoke.id}`, updatePoke)\r\n        .then((res) => { \r\n            dispatch({type: UPDATE_POKEMON, payload: res.data}) //res.data da OK\r\n        })\r\n        .catch((err) =>{\r\n            console.log(err)\r\n        });\r\n    }\r\n}\r\n\r\nexport const deletePokemon = (pokemonId) => {\r\n    return async function(dispatch){\r\n       //const deletePoke = await axios.delete(`http://localhost:3001/pokemons/${pokemonId}`, pokemonId )\r\n       const deletePoke = await axios.delete(`http://pokemonback.up.railway.app/pokemons/${pokemonId}`, pokemonId )\r\n       \r\n       // const deletePoke = await axios.delete(`https://pokemonapi-jzai.onrender.com/pokemons/${pokemonId}`, pokemonId )\r\n        dispatch({type: DELETE_POKEMON, payload: deletePoke})\r\n    }\r\n}\r\n\r\nexport const getTypes = () => {\r\n    return async function(dispatch){\r\n        //let info = await axios.get('http://localhost:3001/types', {})\r\n\r\n        let info = await axios.get('http://pokemonback.up.railway.app/types', {})\r\n        //let info = await axios.get('https://pokemonapi-jzai.onrender.com/types', {})\r\n        return dispatch({type: GET_TYPES, payload: info.data})\r\n    }\r\n}\r\n\r\nexport const filterByCreated = (value) => { //el payload va a ser api, db o all. Depende de lo q eleija el usuario\r\n    return {type: FILTER_BY_CREATED, payload: value}\r\n}\r\n\r\nexport const filterByType = (filter) => {\r\n    return {type: FILTER_BY_TYPE, payload: filter}\r\n}\r\n\r\nexport const sortByAlphabet = (order) => {\r\n    return ({type: SORT_BY_ALPHABET, payload: order});\r\n}\r\n\r\nexport const sortByAttack = (order) => {\r\n    return {type: SORT_BY_ATTACK, payload: order}\r\n}\r\n\r\nexport const cleanFilter = () => {\r\n    return {type: CLEAN_FILTER}\r\n}\r\n\r\nexport const cleanPokemon = () => {\r\n    return { type: CLEAN_POKEMON, payload: {}}\r\n}"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}