{"ast":null,"code":"import { GET_POKEMONS, GET_POKEMON_DETAIL, CREATE_POKEMON, DELETE_POKEMON, GET_TYPES, SORT_BY_ALPHABET, SORT_BY_ATTACK, FILTER_BY_CREATED, FILTER_BY_TYPE, SEARCH_POKEMON, CLEAN_FILTER } from \"./actions\";\nexport default rootReducer;\n\n// case SORT_BY_ATTACK:\n//     const sortAttack = action.payload\n//     if(sortAttack === \"- to +\")\n//     return {\n//         ...state,\n//         pokemons: state.pokemons.sort((a, b) => a.attack > b.attack)}\n//     else if(sortAttack === \"+ to -\")\n//         return {\n//             ...state,\n//             pokemons: state.pokemons.sort((a, b) => a.attack < b.attack)\n//         }\n//     break;\n\n// case SORT_BY_ATTACK:\n//         const sortAsc = state.pokemons.sort((a, b) => a.attack > b.attack)\n//         const sortDes = state.pokemons.sort((a, b) => a.attack < b.attack)\n//         const sortAttack = action.payload\n//             if(sortAttack === \"- to +\")\n//             return {\n//                 ...state,\n//                 pokemons: sortAsc\n//             }\n//             else if(sortAttack === \"+ to -\")\n//                 return {\n//                     ...state,\n//                     pokemons: sortDes\n//                 }\n//             break;\n\n//antes de stackoverflow\n//SORTS Y FILTERS\n// case SORT_BY_ALPHABET:\n//   const sortAlpha =\n//     action.payload === \"a-z\"\n//       ? state.pokemons.sort((a, b) => {\n//           return a.name.toLowerCase() > b.name.toLowerCase();\n//         })\n//       : state.pokemons.sort((a, b) => {\n//           return a.name.toLowerCase() < b.name.toLowerCase();\n//         });\n//   return {\n//     ...state,\n//     pokemons: sortAlpha,\n//   };\n\n// case SORT_BY_ATTACK:\n//   let sortedPoke = action.payload === \"- to +\" ? state.pokemons.sort((a, b) => {\n//       if(a.attack > b.attack){return 1;} if(a.attack < b.attack){return -1;} return 0;}) : state.pokemons.sort((a, b) => {if(a.attack > b.attack){return -1;} if(a.attack < b.attack){return 1;} return 0;});\n//       console.log('antes', state.pokemons)\n//   return {\n//       ...state,\n//       pokemons: sortedPoke,\n//     }\n\n// case FILTER_BY_TYPE:\n//   let type = action.payload;\n//   console.log(action.payload)\n//   let allPoke = state.allPokemons;\n//   let pokemonFiltered = state.pokemons.filter((poke) => poke.types.includes(type))  \n//   let test = action.payload === 'all' ? allPoke : pokemonFiltered\n\n//   console.log(\"filterByType\", action.payload);\n//   if(pokemonFiltered.length > 0){\n//     return {\n//       ...state,\n//       pokemons: test}\n//   } else {\n//     return{\n//       ...state, \n//       pokemons: state.allPokemons\n//     }\n//   }\n\n// case FILTER_BY_CREATED:\n//  let created = state.pokemons.filter((poke) => poke.createdInDB)\n//  let apiPoke = state.allPokemons.filter((poke) => !poke.createdInDB)\n//  let createdFilter = action.payload === 'Data Base' ? created : apiPoke \n//  return {\n//   ...state,\n//   pokemons: action.payload === 'All' ? state.allPokemons : createdFilter\n// }\n\n// case CLEAN_FILTER: \n// return{\n//   ...state,\n//   pokemons: state.pokemons,\n// }\n// default:\n//   return { ...state };\n// }\n// };","map":{"version":3,"names":["GET_POKEMONS","GET_POKEMON_DETAIL","CREATE_POKEMON","DELETE_POKEMON","GET_TYPES","SORT_BY_ALPHABET","SORT_BY_ATTACK","FILTER_BY_CREATED","FILTER_BY_TYPE","SEARCH_POKEMON","CLEAN_FILTER","rootReducer"],"sources":["C:/Users/Nicolas/Documents/Nico/Henry/PI/PI-Pokemon-main/client/src/redux/reducer.js"],"sourcesContent":["import {\r\n  GET_POKEMONS,\r\n  GET_POKEMON_DETAIL,\r\n  CREATE_POKEMON,\r\n  DELETE_POKEMON,\r\n  GET_TYPES,\r\n  SORT_BY_ALPHABET,\r\n  SORT_BY_ATTACK,\r\n  FILTER_BY_CREATED,\r\n  FILTER_BY_TYPE,\r\n  SEARCH_POKEMON,\r\n  CLEAN_FILTER,\r\n} from \"./actions\";\r\n\r\n\r\n\r\nexport default rootReducer;\r\n\r\n// case SORT_BY_ATTACK:\r\n//     const sortAttack = action.payload\r\n//     if(sortAttack === \"- to +\")\r\n//     return {\r\n//         ...state,\r\n//         pokemons: state.pokemons.sort((a, b) => a.attack > b.attack)}\r\n//     else if(sortAttack === \"+ to -\")\r\n//         return {\r\n//             ...state,\r\n//             pokemons: state.pokemons.sort((a, b) => a.attack < b.attack)\r\n//         }\r\n//     break;\r\n\r\n// case SORT_BY_ATTACK:\r\n//         const sortAsc = state.pokemons.sort((a, b) => a.attack > b.attack)\r\n//         const sortDes = state.pokemons.sort((a, b) => a.attack < b.attack)\r\n//         const sortAttack = action.payload\r\n//             if(sortAttack === \"- to +\")\r\n//             return {\r\n//                 ...state,\r\n//                 pokemons: sortAsc\r\n//             }\r\n//             else if(sortAttack === \"+ to -\")\r\n//                 return {\r\n//                     ...state,\r\n//                     pokemons: sortDes\r\n//                 }\r\n//             break;\r\n\r\n\r\n\r\n//antes de stackoverflow\r\n//SORTS Y FILTERS\r\n// case SORT_BY_ALPHABET:\r\n//   const sortAlpha =\r\n//     action.payload === \"a-z\"\r\n//       ? state.pokemons.sort((a, b) => {\r\n//           return a.name.toLowerCase() > b.name.toLowerCase();\r\n//         })\r\n//       : state.pokemons.sort((a, b) => {\r\n//           return a.name.toLowerCase() < b.name.toLowerCase();\r\n//         });\r\n//   return {\r\n//     ...state,\r\n//     pokemons: sortAlpha,\r\n//   };\r\n\r\n// case SORT_BY_ATTACK:\r\n//   let sortedPoke = action.payload === \"- to +\" ? state.pokemons.sort((a, b) => {\r\n//       if(a.attack > b.attack){return 1;} if(a.attack < b.attack){return -1;} return 0;}) : state.pokemons.sort((a, b) => {if(a.attack > b.attack){return -1;} if(a.attack < b.attack){return 1;} return 0;});\r\n//       console.log('antes', state.pokemons)\r\n//   return {\r\n//       ...state,\r\n//       pokemons: sortedPoke,\r\n//     }\r\n  \r\n\r\n// case FILTER_BY_TYPE:\r\n//   let type = action.payload;\r\n//   console.log(action.payload)\r\n//   let allPoke = state.allPokemons;\r\n//   let pokemonFiltered = state.pokemons.filter((poke) => poke.types.includes(type))  \r\n//   let test = action.payload === 'all' ? allPoke : pokemonFiltered\r\n\r\n//   console.log(\"filterByType\", action.payload);\r\n//   if(pokemonFiltered.length > 0){\r\n//     return {\r\n//       ...state,\r\n//       pokemons: test}\r\n//   } else {\r\n//     return{\r\n//       ...state, \r\n//       pokemons: state.allPokemons\r\n//     }\r\n//   }\r\n\r\n// case FILTER_BY_CREATED:\r\n//  let created = state.pokemons.filter((poke) => poke.createdInDB)\r\n//  let apiPoke = state.allPokemons.filter((poke) => !poke.createdInDB)\r\n//  let createdFilter = action.payload === 'Data Base' ? created : apiPoke \r\n//  return {\r\n//   ...state,\r\n//   pokemons: action.payload === 'All' ? state.allPokemons : createdFilter\r\n// }\r\n\r\n// case CLEAN_FILTER: \r\n// return{\r\n//   ...state,\r\n//   pokemons: state.pokemons,\r\n// }\r\n// default:\r\n//   return { ...state };\r\n// }\r\n// };"],"mappings":"AAAA,SACEA,YAAY,EACZC,kBAAkB,EAClBC,cAAc,EACdC,cAAc,EACdC,SAAS,EACTC,gBAAgB,EAChBC,cAAc,EACdC,iBAAiB,EACjBC,cAAc,EACdC,cAAc,EACdC,YAAY,QACP,WAAW;AAIlB,eAAeC,WAAW;;AAE1B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAIA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAGA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA"},"metadata":{},"sourceType":"module"}