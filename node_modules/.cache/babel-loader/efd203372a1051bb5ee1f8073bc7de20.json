{"ast":null,"code":"import { GET_POKEMONS, GET_POKEMON_DETAIL, CREATE_POKEMON, DELETE_POKEMON, GET_TYPES, SORT_BY_ALPHABET, SORT_BY_ATTACK, FILTER_BY_CREATED, FILTER_BY_TYPE, SEARCH_POKEMON, CLEAN_FILTER, UPDATE_POKEMON } from \"./actions\";\nconst initialState = {\n  pokemons: [],\n  allPokemons: [],\n  pokemonDetail: {},\n  types: []\n  //filterByType: [],\n};\n\nconst rootReducer = function () {\n  let state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : initialState;\n  let action = arguments.length > 1 ? arguments[1] : undefined;\n  switch (action.type) {\n    case GET_POKEMONS:\n      return {\n        ...state,\n        pokemons: action.payload,\n        allPokemons: action.payload\n      };\n    case GET_POKEMON_DETAIL:\n      return {\n        ...state,\n        pokemonDetail: action.payload\n      };\n    case GET_TYPES:\n      return {\n        ...state,\n        types: action.payload\n      };\n    case CREATE_POKEMON:\n      const name = action.payload.data.name;\n      const speed = action.payload.data.speed;\n      const hp = action.payload.data.hp;\n      const height = action.payload.data.height;\n      const weight = action.payload.data.weight;\n      const attack = action.payload.data.attack;\n      const defense = action.payload.data.defense;\n      const createdInDB = action.payload.data.createdInDB;\n      const types = action.payload.data.types;\n      const img = action.payload.data.img;\n      return {\n        ...state,\n        pokemons: state.pokemons.concat({\n          name,\n          speed,\n          hp,\n          height,\n          weight,\n          attack,\n          defense,\n          createdInDB,\n          types,\n          img\n        })\n      };\n    case UPDATE_POKEMON:\n      const index = state.pokemons.findIndex(poke => poke.id === action.payload.id);\n      // Creo una copia del estado y actualiza el elemento en la copia\n      const newState = {\n        ...state\n      };\n      newState.pokemons[index] = action.payload;\n      // Devuelve la copia actualizada del estado\n      return newState;\n    case DELETE_POKEMON:\n      const deleted = action.payload;\n      const remove = state.pokemons.filter(pokemon => pokemon.id !== deleted);\n      return {\n        ...state,\n        pokemons: remove\n      };\n\n    //SORTS Y FILTERS\n    case FILTER_BY_CREATED:\n      let created = state.allPokemons.filter(poke => poke.createdInDB); //filtro los q tienen la prop createdInDB\n      let apiPoke = state.allPokemons.filter(poke => !poke.createdInDB); //filtro los q NO tienen la prop createdInDB\n      let createdFilter = action.payload === \"Data Base\" ? created : apiPoke; //el ternario hace que al aplicar el filtro \n      //si se cumple muestra los creados y si es false muestra los que vienen de la API\n      return {\n        ...state,\n        //el state pokemons tiene un ternario q si el value es All muestra todos los poke\n        pokemons: action.payload === \"All\" ? state.allPokemons : createdFilter //si no, muestra el resultado de createdFilter        \n      };\n\n    case FILTER_BY_TYPE:\n      let type = action.payload;\n      console.log(action.payload);\n      let allPoke = state.allPokemons;\n      let pokemonFiltered = state.pokemons.filter(poke => poke.types.includes(type));\n      let test = action.payload === \"all\" ? allPoke : pokemonFiltered;\n      if (pokemonFiltered.length > 0) {\n        return {\n          ...state,\n          pokemons: test\n        };\n      } else {\n        return {\n          ...state,\n          pokemons: state.allPokemons\n        };\n      }\n    case SORT_BY_ALPHABET:\n      const sortAlpha = action.payload === \"a-z\" ? state.pokemons.sort((a, b) => {\n        if (a.name.toLowerCase() > b.name.toLowerCase()) {\n          return 1;\n        }\n        if (a.name.toLowerCase() < b.name.toLowerCase()) {\n          return -1;\n        }\n        return 0;\n      }) : state.pokemons.sort((a, b) => {\n        if (a.name.toLowerCase() > b.name.toLowerCase()) {\n          return -1;\n        }\n        if (a.name.toLowerCase() < b.name.toLowerCase()) {\n          return 1;\n        }\n        return 0;\n      });\n      console.log(\"state.pokemons alpha\", state.pokemons);\n      console.log(\"sortedPoke alpha\", sortAlpha);\n      return {\n        ...state,\n        pokemons: sortAlpha\n      };\n    case SORT_BY_ATTACK:\n      let sortedPoke = action.payload === \"- to +\" ? state.pokemons.sort((a, b) => {\n        if (a.attack > b.attack) {\n          return 1;\n        }\n        if (a.attack < b.attack) {\n          return -1;\n        }\n        return 0;\n      }) : state.pokemons.sort((a, b) => {\n        if (a.attack > b.attack) {\n          return -1;\n        }\n        if (a.attack < b.attack) {\n          return 1;\n        }\n        return 0;\n      });\n      console.log(\"state.pokemons attack\", state.pokemons);\n      console.log(\"sortedPoke attack\", sortedPoke);\n      return {\n        ...state,\n        pokemons: sortedPoke\n      };\n    case SEARCH_POKEMON:\n      return {\n        ...state,\n        pokemons: action.payload\n      };\n    case CLEAN_FILTER:\n      const all = state.pokemons;\n      return {\n        ...state,\n        pokemons: all\n      };\n    default:\n      return {\n        ...state\n      };\n  }\n};\nexport default rootReducer;","map":{"version":3,"names":["GET_POKEMONS","GET_POKEMON_DETAIL","CREATE_POKEMON","DELETE_POKEMON","GET_TYPES","SORT_BY_ALPHABET","SORT_BY_ATTACK","FILTER_BY_CREATED","FILTER_BY_TYPE","SEARCH_POKEMON","CLEAN_FILTER","UPDATE_POKEMON","initialState","pokemons","allPokemons","pokemonDetail","types","rootReducer","state","action","type","payload","name","data","speed","hp","height","weight","attack","defense","createdInDB","img","concat","index","findIndex","poke","id","newState","deleted","remove","filter","pokemon","created","apiPoke","createdFilter","console","log","allPoke","pokemonFiltered","includes","test","length","sortAlpha","sort","a","b","toLowerCase","sortedPoke","all"],"sources":["C:/Users/Nicolas/Documents/Nico/Henry/PI/PI-Pokemon-main/client/src/redux/reducer.js"],"sourcesContent":["import {\r\n  GET_POKEMONS,\r\n  GET_POKEMON_DETAIL,\r\n  CREATE_POKEMON,\r\n  DELETE_POKEMON,\r\n  GET_TYPES,\r\n  SORT_BY_ALPHABET,\r\n  SORT_BY_ATTACK,\r\n  FILTER_BY_CREATED,\r\n  FILTER_BY_TYPE,\r\n  SEARCH_POKEMON,\r\n  CLEAN_FILTER,\r\n  UPDATE_POKEMON,\r\n} from \"./actions\";\r\n\r\nconst initialState = {\r\n  pokemons: [],\r\n  allPokemons: [],\r\n  pokemonDetail: {},\r\n  types: [],\r\n  //filterByType: [],\r\n};\r\n\r\nconst rootReducer = (state = initialState, action) => {\r\n  switch (action.type) {\r\n    case GET_POKEMONS:\r\n      return {\r\n        ...state,\r\n        pokemons: action.payload,\r\n        allPokemons: action.payload,\r\n      };\r\n    case GET_POKEMON_DETAIL:\r\n      return {\r\n        ...state,\r\n        pokemonDetail: action.payload,\r\n      };\r\n    case GET_TYPES:\r\n      return {\r\n        ...state,\r\n        types: action.payload,\r\n      };\r\n    case CREATE_POKEMON:\r\n      const name = action.payload.data.name;\r\n      const speed = action.payload.data.speed;\r\n      const hp = action.payload.data.hp;\r\n      const height = action.payload.data.height;\r\n      const weight = action.payload.data.weight;\r\n      const attack = action.payload.data.attack;\r\n      const defense = action.payload.data.defense;\r\n      const createdInDB = action.payload.data.createdInDB;\r\n      const types = action.payload.data.types;\r\n      const img = action.payload.data.img;\r\n\r\n      return {\r\n        ...state,\r\n        pokemons: state.pokemons.concat({\r\n          name,\r\n          speed,\r\n          hp,\r\n          height,\r\n          weight,\r\n          attack,\r\n          defense,\r\n          createdInDB,\r\n          types,\r\n          img,\r\n        }),\r\n      };\r\n\r\n    case UPDATE_POKEMON:\r\n      const index = state.pokemons.findIndex(\r\n        (poke) => poke.id === action.payload.id\r\n      );\r\n      // Creo una copia del estado y actualiza el elemento en la copia\r\n      const newState = { ...state };\r\n      newState.pokemons[index] = action.payload;\r\n      // Devuelve la copia actualizada del estado\r\n      return newState;\r\n\r\n    case DELETE_POKEMON:\r\n      const deleted = action.payload;\r\n      const remove = state.pokemons.filter((pokemon) => pokemon.id !== deleted);\r\n\r\n      return {\r\n        ...state,\r\n        pokemons: remove,\r\n      };\r\n\r\n    //SORTS Y FILTERS\r\n    case FILTER_BY_CREATED:\r\n      let created = state.allPokemons.filter((poke) => poke.createdInDB); //filtro los q tienen la prop createdInDB\r\n      let apiPoke = state.allPokemons.filter((poke) => !poke.createdInDB); //filtro los q NO tienen la prop createdInDB\r\n      let createdFilter = action.payload === \"Data Base\" ? created : apiPoke; //el ternario hace que al aplicar el filtro \r\n                                                //si se cumple muestra los creados y si es false muestra los que vienen de la API\r\n      return {\r\n        ...state,                                 //el state pokemons tiene un ternario q si el value es All muestra todos los poke\r\n        pokemons: action.payload === \"All\" ? state.allPokemons : createdFilter, //si no, muestra el resultado de createdFilter        \r\n      };                                                                        \r\n\r\n    case FILTER_BY_TYPE:\r\n      let type = action.payload;\r\n      console.log(action.payload);\r\n      let allPoke = state.allPokemons;\r\n      let pokemonFiltered = state.pokemons.filter((poke) =>\r\n        poke.types.includes(type)\r\n      );\r\n      let test = action.payload === \"all\" ? allPoke : pokemonFiltered;\r\n\r\n      if (pokemonFiltered.length > 0) {\r\n        return {\r\n          ...state,\r\n          pokemons: test,\r\n        };\r\n      } else {\r\n        return {\r\n          ...state,\r\n          pokemons: state.allPokemons,\r\n        };\r\n      }\r\n\r\n    case SORT_BY_ALPHABET:\r\n      const sortAlpha =\r\n        action.payload === \"a-z\"\r\n          ? state.pokemons.sort((a, b) => {\r\n              if (a.name.toLowerCase() > b.name.toLowerCase()) {\r\n                return 1;\r\n              }\r\n              if (a.name.toLowerCase() < b.name.toLowerCase()) {\r\n                return -1;\r\n              }\r\n              return 0;\r\n            })\r\n          : state.pokemons.sort((a, b) => {\r\n              if (a.name.toLowerCase() > b.name.toLowerCase()) {\r\n                return -1;\r\n              }\r\n              if (a.name.toLowerCase() < b.name.toLowerCase()) {\r\n                return 1;\r\n              }\r\n              return 0;\r\n            });\r\n      console.log(\"state.pokemons alpha\", state.pokemons);\r\n      console.log(\"sortedPoke alpha\", sortAlpha);\r\n      return {\r\n        ...state,\r\n        pokemons: sortAlpha,\r\n      };\r\n\r\n    case SORT_BY_ATTACK:\r\n      let sortedPoke =\r\n        action.payload === \"- to +\"\r\n          ? state.pokemons.sort((a, b) => {\r\n              if (a.attack > b.attack) {\r\n                return 1;\r\n              }\r\n              if (a.attack < b.attack) {\r\n                return -1;\r\n              }\r\n              return 0;\r\n            })\r\n          : state.pokemons.sort((a, b) => {\r\n              if (a.attack > b.attack) {\r\n                return -1;\r\n              }\r\n              if (a.attack < b.attack) {\r\n                return 1;\r\n              }\r\n              return 0;\r\n            });\r\n      console.log(\"state.pokemons attack\", state.pokemons);\r\n      console.log(\"sortedPoke attack\", sortedPoke);\r\n      return {\r\n        ...state,\r\n        pokemons: sortedPoke,\r\n      };\r\n\r\n    case SEARCH_POKEMON:\r\n      return {\r\n        ...state,\r\n        pokemons: action.payload,\r\n      };\r\n\r\n    case CLEAN_FILTER:\r\n      const all = state.pokemons;\r\n      return {\r\n        ...state,\r\n        pokemons: all,\r\n      };\r\n    default:\r\n      return { ...state };\r\n  }\r\n};\r\n\r\nexport default rootReducer;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}