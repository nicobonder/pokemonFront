{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Nicolas\\\\Documents\\\\Nico\\\\Henry\\\\PI\\\\PI-Pokemon-main\\\\client\\\\src\\\\components\\\\Pokemons\\\\Pokemons.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport s from './Pokemons.module.css';\nimport { useDispatch, useSelector } from \"react-redux\";\nimport Paging from '../Paging/Paging';\nimport logo from '../Navbar/pokeLogo.png';\nimport * as actions from '../../redux/actions';\n\n//importo para poder mapear todas las cards\nimport PokeCard from '../PokeCard/PokeCard';\nimport Filters from '../Filters/Filters';\nimport { Link } from 'react-router-dom';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function Pokemons() {\n  _s();\n  const dispatch = useDispatch();\n  const pokemons = useSelector(state => state.pokemons);\n  const types = useSelector(state => state.types);\n  const filterByType = useSelector(state => state.filterByType);\n\n  //PAGINADO.\n  const [currentPage, setCurrentPage] = useState(1); //Pokemons va a empezar en la primera pagina\n  const [pokemonsPerPage, setPokemonsPerPage] = useState(12); //Traigo 12 poke por pagina\n  const [items, setItems] = useState([...pokemons].splice(0, pokemonsPerPage));\n  const indexOfLastPokemon = currentPage * pokemonsPerPage; //empieza en 12. Es el indice del ultimo poke que tengo en la pagina\n  const indexOfFirstPokemon = indexOfLastPokemon - pokemonsPerPage; //empieza en 0. 12-12 . Es el indice del primer pokemon\n  const currentPokemons = pokemons.slice(indexOfFirstPokemon, indexOfLastPokemon); //corto los poke q quiero de la array de pokemons\n\n  function paging(pageNumber) {\n    setCurrentPage(pageNumber); //setea la pag actual con el nro de pagina que le paso desde el Paging\n  }\n\n  function nextHandler() {\n    const totalPokemons = pokemons.length;\n    const nextPage = currentPage + 1;\n    const firstIndex = nextPage * pokemonsPerPage;\n    if (firstIndex >= totalPokemons) return; //si el indice es = al total de poke, estoy en el ultimo poke y no puede haber next\n    setItems([...pokemons].splice(firstIndex, pokemonsPerPage));\n    setCurrentPage(nextPage);\n  }\n  function prevHandler() {\n    const prevPage = currentPage - 1;\n    if (prevPage < 0) return;\n    const firstIndex = prevPage * pokemonsPerPage;\n    setItems([...pokemons].splice(firstIndex, pokemonsPerPage));\n    setCurrentPage(prevPage);\n  }\n  React.useEffect(() => {\n    dispatch(actions.getPokemons());\n    dispatch(actions.getTypes());\n  }, [dispatch]);\n  console.log('filteredBytype', filterByType);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: s.pokemonsSection,\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: s.filtered,\n      children: /*#__PURE__*/_jsxDEV(Filters, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: s.pokePaged,\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: s.allPokemons,\n        children: currentPokemons.length > 0 ? currentPokemons === null || currentPokemons === void 0 ? void 0 : currentPokemons.map(poke => {\n          return /*#__PURE__*/_jsxDEV(PokeCard, {\n            id: poke.id,\n            name: poke.name,\n            image: poke.img,\n            types: poke.types\n          }, poke.id, false, {\n            fileName: _jsxFileName,\n            lineNumber: 68,\n            columnNumber: 19\n          }, this);\n        }) : /*#__PURE__*/_jsxDEV(\"div\", {\n          className: s.loading,\n          children: [\" \", /*#__PURE__*/_jsxDEV(\"img\", {\n            src: logo,\n            alt: \"Loading Pokemons\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 75,\n            columnNumber: 48\n          }, this), \" \"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 75,\n          columnNumber: 20\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(Paging, {\n        pokemonsPerPage: pokemonsPerPage,\n        pokemons: pokemons.length,\n        paging: paging,\n        nextHandler: nextHandler,\n        prevHandler: prevHandler,\n        currentPage: currentPage\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 59,\n    columnNumber: 5\n  }, this);\n}\n_s(Pokemons, \"8AivPkd6iyM8lRME28rcRQkuAIw=\", false, function () {\n  return [useDispatch, useSelector, useSelector, useSelector];\n});\n_c = Pokemons;\nvar _c;\n$RefreshReg$(_c, \"Pokemons\");","map":{"version":3,"names":["React","useState","s","useDispatch","useSelector","Paging","logo","actions","PokeCard","Filters","Link","Pokemons","dispatch","pokemons","state","types","filterByType","currentPage","setCurrentPage","pokemonsPerPage","setPokemonsPerPage","items","setItems","splice","indexOfLastPokemon","indexOfFirstPokemon","currentPokemons","slice","paging","pageNumber","nextHandler","totalPokemons","length","nextPage","firstIndex","prevHandler","prevPage","useEffect","getPokemons","getTypes","console","log","pokemonsSection","filtered","pokePaged","allPokemons","map","poke","id","name","img","loading"],"sources":["C:/Users/Nicolas/Documents/Nico/Henry/PI/PI-Pokemon-main/client/src/components/Pokemons/Pokemons.js"],"sourcesContent":["import React, { useState } from 'react'\r\nimport s from './Pokemons.module.css'\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport Paging from '../Paging/Paging';\r\nimport logo from '../Navbar/pokeLogo.png'\r\n\r\nimport * as actions from '../../redux/actions'\r\n\r\n//importo para poder mapear todas las cards\r\nimport PokeCard from '../PokeCard/PokeCard';\r\nimport Filters from '../Filters/Filters';\r\nimport { Link } from 'react-router-dom';\r\n\r\nexport default function Pokemons() {\r\n  const dispatch = useDispatch();\r\n  const pokemons = useSelector((state)=> state.pokemons);\r\n  const types = useSelector((state)=> state.types);\r\n  const filterByType = useSelector((state)=> state.filterByType);\r\n\r\n   //PAGINADO.\r\n   const [currentPage, setCurrentPage] = useState(1); //Pokemons va a empezar en la primera pagina\r\n   const [pokemonsPerPage, setPokemonsPerPage] = useState(12); //Traigo 12 poke por pagina\r\n   const [items, setItems] = useState([...pokemons].splice(0, pokemonsPerPage))\r\n   const indexOfLastPokemon = currentPage * pokemonsPerPage //empieza en 12. Es el indice del ultimo poke que tengo en la pagina\r\n   const indexOfFirstPokemon = indexOfLastPokemon - pokemonsPerPage //empieza en 0. 12-12 . Es el indice del primer pokemon\r\n   const currentPokemons = pokemons.slice(indexOfFirstPokemon, indexOfLastPokemon) //corto los poke q quiero de la array de pokemons\r\n\r\n   \r\n   function paging(pageNumber) {\r\n     setCurrentPage(pageNumber)   //setea la pag actual con el nro de pagina que le paso desde el Paging\r\n    }\r\n    \r\n    function nextHandler() {\r\n      const totalPokemons = pokemons.length\r\n      const nextPage = currentPage + 1;\r\n      const firstIndex = nextPage * pokemonsPerPage\r\n      if(firstIndex >= totalPokemons) return; //si el indice es = al total de poke, estoy en el ultimo poke y no puede haber next\r\n      setItems([...pokemons].splice(firstIndex, pokemonsPerPage))\r\n      setCurrentPage(nextPage)\r\n    } \r\n\r\n    function prevHandler() {\r\n      const prevPage = currentPage - 1;\r\n      if(prevPage < 0) return;\r\n      const firstIndex = prevPage * pokemonsPerPage\r\n      setItems([...pokemons].splice(firstIndex, pokemonsPerPage))\r\n      setCurrentPage(prevPage)\r\n    } \r\n\r\n  React.useEffect(() => {\r\n    dispatch(actions.getPokemons());\r\n    dispatch(actions.getTypes());\r\n  },[dispatch])\r\n\r\n  console.log('filteredBytype', filterByType)\r\n\r\n\r\n  return (\r\n    <div className={s.pokemonsSection}>\r\n      <div className={s.filtered}>\r\n        <Filters />\r\n      </div>\r\n      <div className={s.pokePaged}>\r\n          <div className={s.allPokemons}>\r\n            {currentPokemons.length > 0 ?\r\n              currentPokemons?.map((poke) => {\r\n                return (\r\n                  <PokeCard \r\n                  key={poke.id} \r\n                  id={poke.id} \r\n                  name={poke.name} \r\n                  image={poke.img} \r\n                  types={poke.types}/>\r\n                )\r\n              }) : <div className={s.loading}> <img src={logo} alt='Loading Pokemons'/> </div>\r\n            }\r\n        </div>\r\n        \r\n        <Paging\r\n          pokemonsPerPage = {pokemonsPerPage}\r\n          pokemons = {pokemons.length}\r\n          paging = {paging}\r\n          nextHandler ={nextHandler}\r\n          prevHandler = {prevHandler}\r\n          currentPage = {currentPage}\r\n        />\r\n      </div>\r\n    </div>  \r\n  )\r\n}\r\n\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}