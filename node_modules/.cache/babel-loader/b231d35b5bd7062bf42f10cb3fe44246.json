{"ast":null,"code":"import { GET_POKEMONS, GET_POKEMON_DETAIL, CREATE_POKEMON, DELETE_POKEMON, GET_TYPES, SORT_BY_ALPHABET, SORT_BY_ATTACK, FILTER_BY_CREATED, FILTER_BY_TYPE, SEARCH_POKEMON, CLEAN_FILTER } from \"./actions\";\nconst initialState = {\n  pokemons: [],\n  pokemonDetail: {},\n  types: [],\n  filterByType: null\n};\nconst rootReducer = function () {\n  let state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : initialState;\n  let action = arguments.length > 1 ? arguments[1] : undefined;\n  switch (action.type) {\n    case GET_POKEMONS:\n      return {\n        ...state,\n        pokemons: action.payload\n      };\n    case GET_POKEMON_DETAIL:\n      return {\n        ...state,\n        pokemonDetail: action.payload\n      };\n    case GET_TYPES:\n      return {\n        ...state,\n        types: action.payload\n      };\n    case CREATE_POKEMON:\n      const name = action.payload.data.name;\n      const speed = action.payload.data.speed;\n      const hp = action.payload.data.hp;\n      const height = action.payload.data.height;\n      const weight = action.payload.data.weight;\n      const attack = action.payload.data.attack;\n      const defense = action.payload.data.defense;\n      const createdInDB = action.payload.data.createdInDB;\n      const types = action.payload.data.types;\n      const img = action.payload.data.img;\n      return {\n        ...state,\n        //pokemons: state.pokemons.concat({action.payload.data.name, action.payload.data.speed })\n        pokemons: state.pokemons.concat({\n          name,\n          speed,\n          hp,\n          height,\n          weight,\n          attack,\n          defense,\n          createdInDB,\n          types,\n          img\n        })\n      };\n    case DELETE_POKEMON:\n      return {\n        ...state,\n        pokemons: state.pokemons.filter(pokemon => pokemon.id !== action.payload)\n      };\n    case SORT_BY_ALPHABET:\n      const sortAlpha = action.payload === \"a-z\" ? state.pokemons.sort((a, b) => {\n        return a.name.toLowerCase() > b.name.toLowerCase();\n      }) : state.pokemons.sort((a, b) => {\n        return a.name.toLowerCase() < b.name.toLowerCase();\n      });\n      return {\n        ...state,\n        pokemons: sortAlpha\n      };\n    case SORT_BY_ATTACK:\n      const sortAsc = state.pokemons.sort((a, b) => a.attack > b.attack);\n      const sortDes = state.pokemons.sort((a, b) => a.attack < b.attack);\n      const sortAttack = action.payload;\n      if (sortAttack === \"- to +\") return {\n        ...state,\n        pokemons: sortAsc\n      };else if (sortAttack === \"+ to -\") return {\n        ...state,\n        pokemons: sortDes\n      };\n      break;\n    case FILTER_BY_TYPE:\n      console.log(\"filterByType\", action.payload);\n      return {\n        ...state,\n        filterByType: action.payload\n      };\n    case FILTER_BY_CREATED:\n      let created = state.pokemons.filter(p => typeof p.id === \"string\");\n      let api = state.pokemons.filter(p => typeof p.id === \"number\");\n      if (action.payload === \"DataBase\") {\n        console.log(\"action.payload is\", action.payload);\n        return {\n          ...state,\n          pokemons: created\n        };\n      } else if (action.payload === \"API\") {\n        console.log(\"action.payload is\", action.payload);\n        return {\n          ...state,\n          pokemons: api\n        };\n      } else if (action.payload === \"All\") {\n        console.log(\"action.payload is\", action.payload);\n        return {\n          ...state,\n          pokemons: state.pokemons\n        };\n      }\n      break;\n    case SEARCH_POKEMON:\n      return {\n        ...state,\n        pokemons: action.payload\n      };\n    case CLEAN_FILTER:\n      re;\n    default:\n      return {\n        ...state\n      };\n  }\n};\nexport default rootReducer;\n\n// case SORT_BY_ATTACK:\n//     const sortAttack = action.payload\n//     if(sortAttack === \"- to +\")\n//     return {\n//         ...state,\n//         pokemons: state.pokemons.sort((a, b) => a.attack > b.attack)}\n//     else if(sortAttack === \"+ to -\")\n//         return {\n//             ...state,\n//             pokemons: state.pokemons.sort((a, b) => a.attack < b.attack)\n//         }\n//     break;\n\n// case SORT_BY_ATTACK:\n//         const sortAsc = state.pokemons.sort((a, b) => a.attack > b.attack)\n//         const sortDes = state.pokemons.sort((a, b) => a.attack < b.attack)\n//         const sortAttack = action.payload\n//             if(sortAttack === \"- to +\")\n//             return {\n//                 ...state,\n//                 pokemons: sortAsc\n//             }\n//             else if(sortAttack === \"+ to -\")\n//                 return {\n//                     ...state,\n//                     pokemons: sortDes\n//                 }\n//             break;\n\n// let pokemonFiltered = state.filterByType;\n// if(pokemonFiltered.length > 0){\n//     let sortedPokemons = action.payload === '- to +' ? state.filterByType.sort((a, b) => {\n//         if(a.name > b.name){return 1;} if(a.name < b.name){return -1;} return 0;}) : state.filterByType.sort((a, b) => {if(a.name > b.name){return -1;} if(a.name < b.name){return 1;} return 0;});\n//     return {\n//         ...state,\n//         filterByType: sortedPokemons,\n//     }\n// }\n// let sortedPoke = action.payload === '- to +' ? state.pokemons.sort((a, b) => {\n//     if(a.name > b.name){return 1;} if(a.name < b.name){return -1;} return 0;}) : state.pokemons.sort((a, b) => {if(a.name > b.name){return -1;} if(a.name < b.name){return 1;} return 0;});\n// return {\n//     ...state,\n//     pokemons: sortedPoke,\n// }","map":{"version":3,"names":["GET_POKEMONS","GET_POKEMON_DETAIL","CREATE_POKEMON","DELETE_POKEMON","GET_TYPES","SORT_BY_ALPHABET","SORT_BY_ATTACK","FILTER_BY_CREATED","FILTER_BY_TYPE","SEARCH_POKEMON","CLEAN_FILTER","initialState","pokemons","pokemonDetail","types","filterByType","rootReducer","state","action","type","payload","name","data","speed","hp","height","weight","attack","defense","createdInDB","img","concat","filter","pokemon","id","sortAlpha","sort","a","b","toLowerCase","sortAsc","sortDes","sortAttack","console","log","created","p","api","re"],"sources":["C:/Users/Nicolas/Documents/Nico/Henry/PI/PI-Pokemon-main/client/src/redux/reducer.js"],"sourcesContent":["import {\r\n  GET_POKEMONS,\r\n  GET_POKEMON_DETAIL,\r\n  CREATE_POKEMON,\r\n  DELETE_POKEMON,\r\n  GET_TYPES,\r\n  SORT_BY_ALPHABET,\r\n  SORT_BY_ATTACK,\r\n  FILTER_BY_CREATED,\r\n  FILTER_BY_TYPE,\r\n  SEARCH_POKEMON,\r\n  CLEAN_FILTER,\r\n} from \"./actions\";\r\n\r\nconst initialState = {\r\n  pokemons: [],\r\n  pokemonDetail: {},\r\n  types: [],\r\n  filterByType: null,\r\n};\r\n\r\nconst rootReducer = (state = initialState, action) => {\r\n  switch (action.type) {\r\n    case GET_POKEMONS:\r\n      return {\r\n        ...state,\r\n        pokemons: action.payload,\r\n      };\r\n    case GET_POKEMON_DETAIL:\r\n      return {\r\n        ...state,\r\n        pokemonDetail: action.payload,\r\n      };\r\n\r\n    case GET_TYPES:\r\n      return {\r\n        ...state,\r\n        types: action.payload,\r\n      };\r\n    case CREATE_POKEMON:\r\n      const name = action.payload.data.name;\r\n      const speed = action.payload.data.speed;\r\n      const hp = action.payload.data.hp;\r\n      const height = action.payload.data.height;\r\n      const weight = action.payload.data.weight;\r\n      const attack = action.payload.data.attack;\r\n      const defense = action.payload.data.defense;\r\n      const createdInDB = action.payload.data.createdInDB;\r\n      const types = action.payload.data.types;\r\n      const img = action.payload.data.img;\r\n\r\n      return {\r\n        ...state,\r\n        //pokemons: state.pokemons.concat({action.payload.data.name, action.payload.data.speed })\r\n        pokemons: state.pokemons.concat({\r\n          name,\r\n          speed,\r\n          hp,\r\n          height,\r\n          weight,\r\n          attack,\r\n          defense,\r\n          createdInDB,\r\n          types,\r\n          img,\r\n        }),\r\n      };\r\n    case DELETE_POKEMON:\r\n      return {\r\n        ...state,\r\n        pokemons: state.pokemons.filter(\r\n          (pokemon) => pokemon.id !== action.payload\r\n        ),\r\n      };\r\n\r\n    case SORT_BY_ALPHABET:\r\n      const sortAlpha =\r\n        action.payload === \"a-z\"\r\n          ? state.pokemons.sort((a, b) => {\r\n              return a.name.toLowerCase() > b.name.toLowerCase();\r\n            })\r\n          : state.pokemons.sort((a, b) => {\r\n              return a.name.toLowerCase() < b.name.toLowerCase();\r\n            });\r\n      return {\r\n        ...state,\r\n        pokemons: sortAlpha,\r\n      };\r\n\r\n    case SORT_BY_ATTACK:\r\n      const sortAsc = state.pokemons.sort((a, b) => a.attack > b.attack);\r\n      const sortDes = state.pokemons.sort((a, b) => a.attack < b.attack);\r\n      const sortAttack = action.payload;\r\n      if (sortAttack === \"- to +\")\r\n        return {\r\n          ...state,\r\n          pokemons: sortAsc,\r\n        };\r\n      else if (sortAttack === \"+ to -\")\r\n        return {\r\n          ...state,\r\n          pokemons: sortDes,\r\n        };\r\n      break;\r\n\r\n    case FILTER_BY_TYPE:\r\n      console.log(\"filterByType\", action.payload);\r\n      return {\r\n        ...state,\r\n        filterByType: action.payload,\r\n      };\r\n\r\n    case FILTER_BY_CREATED:\r\n      let created = state.pokemons.filter((p) => typeof p.id === \"string\");\r\n      let api = state.pokemons.filter((p) => typeof p.id === \"number\");\r\n      if (action.payload === \"DataBase\") {\r\n        console.log(\"action.payload is\", action.payload);\r\n        return {\r\n          ...state,\r\n          pokemons: created,\r\n        };\r\n      } else if (action.payload === \"API\") {\r\n        console.log(\"action.payload is\", action.payload);\r\n        return {\r\n          ...state,\r\n          pokemons: api,\r\n        };\r\n      } else if (action.payload === \"All\") {\r\n        console.log(\"action.payload is\", action.payload);\r\n        return {\r\n          ...state,\r\n          pokemons: state.pokemons,\r\n        };\r\n      }\r\n      break;\r\n\r\n    case SEARCH_POKEMON:\r\n      return {\r\n        ...state,\r\n        pokemons: action.payload,\r\n      };\r\n\r\n    case CLEAN_FILTER: \r\n    re\r\n    default:\r\n      return { ...state };\r\n  }\r\n};\r\n\r\nexport default rootReducer;\r\n\r\n// case SORT_BY_ATTACK:\r\n//     const sortAttack = action.payload\r\n//     if(sortAttack === \"- to +\")\r\n//     return {\r\n//         ...state,\r\n//         pokemons: state.pokemons.sort((a, b) => a.attack > b.attack)}\r\n//     else if(sortAttack === \"+ to -\")\r\n//         return {\r\n//             ...state,\r\n//             pokemons: state.pokemons.sort((a, b) => a.attack < b.attack)\r\n//         }\r\n//     break;\r\n\r\n// case SORT_BY_ATTACK:\r\n//         const sortAsc = state.pokemons.sort((a, b) => a.attack > b.attack)\r\n//         const sortDes = state.pokemons.sort((a, b) => a.attack < b.attack)\r\n//         const sortAttack = action.payload\r\n//             if(sortAttack === \"- to +\")\r\n//             return {\r\n//                 ...state,\r\n//                 pokemons: sortAsc\r\n//             }\r\n//             else if(sortAttack === \"+ to -\")\r\n//                 return {\r\n//                     ...state,\r\n//                     pokemons: sortDes\r\n//                 }\r\n//             break;\r\n\r\n// let pokemonFiltered = state.filterByType;\r\n// if(pokemonFiltered.length > 0){\r\n//     let sortedPokemons = action.payload === '- to +' ? state.filterByType.sort((a, b) => {\r\n//         if(a.name > b.name){return 1;} if(a.name < b.name){return -1;} return 0;}) : state.filterByType.sort((a, b) => {if(a.name > b.name){return -1;} if(a.name < b.name){return 1;} return 0;});\r\n//     return {\r\n//         ...state,\r\n//         filterByType: sortedPokemons,\r\n//     }\r\n// }\r\n// let sortedPoke = action.payload === '- to +' ? state.pokemons.sort((a, b) => {\r\n//     if(a.name > b.name){return 1;} if(a.name < b.name){return -1;} return 0;}) : state.pokemons.sort((a, b) => {if(a.name > b.name){return -1;} if(a.name < b.name){return 1;} return 0;});\r\n// return {\r\n//     ...state,\r\n//     pokemons: sortedPoke,\r\n// }\r\n"],"mappings":"AAAA,SACEA,YAAY,EACZC,kBAAkB,EAClBC,cAAc,EACdC,cAAc,EACdC,SAAS,EACTC,gBAAgB,EAChBC,cAAc,EACdC,iBAAiB,EACjBC,cAAc,EACdC,cAAc,EACdC,YAAY,QACP,WAAW;AAElB,MAAMC,YAAY,GAAG;EACnBC,QAAQ,EAAE,EAAE;EACZC,aAAa,EAAE,CAAC,CAAC;EACjBC,KAAK,EAAE,EAAE;EACTC,YAAY,EAAE;AAChB,CAAC;AAED,MAAMC,WAAW,GAAG,YAAkC;EAAA,IAAjCC,KAAK,uEAAGN,YAAY;EAAA,IAAEO,MAAM;EAC/C,QAAQA,MAAM,CAACC,IAAI;IACjB,KAAKnB,YAAY;MACf,OAAO;QACL,GAAGiB,KAAK;QACRL,QAAQ,EAAEM,MAAM,CAACE;MACnB,CAAC;IACH,KAAKnB,kBAAkB;MACrB,OAAO;QACL,GAAGgB,KAAK;QACRJ,aAAa,EAAEK,MAAM,CAACE;MACxB,CAAC;IAEH,KAAKhB,SAAS;MACZ,OAAO;QACL,GAAGa,KAAK;QACRH,KAAK,EAAEI,MAAM,CAACE;MAChB,CAAC;IACH,KAAKlB,cAAc;MACjB,MAAMmB,IAAI,GAAGH,MAAM,CAACE,OAAO,CAACE,IAAI,CAACD,IAAI;MACrC,MAAME,KAAK,GAAGL,MAAM,CAACE,OAAO,CAACE,IAAI,CAACC,KAAK;MACvC,MAAMC,EAAE,GAAGN,MAAM,CAACE,OAAO,CAACE,IAAI,CAACE,EAAE;MACjC,MAAMC,MAAM,GAAGP,MAAM,CAACE,OAAO,CAACE,IAAI,CAACG,MAAM;MACzC,MAAMC,MAAM,GAAGR,MAAM,CAACE,OAAO,CAACE,IAAI,CAACI,MAAM;MACzC,MAAMC,MAAM,GAAGT,MAAM,CAACE,OAAO,CAACE,IAAI,CAACK,MAAM;MACzC,MAAMC,OAAO,GAAGV,MAAM,CAACE,OAAO,CAACE,IAAI,CAACM,OAAO;MAC3C,MAAMC,WAAW,GAAGX,MAAM,CAACE,OAAO,CAACE,IAAI,CAACO,WAAW;MACnD,MAAMf,KAAK,GAAGI,MAAM,CAACE,OAAO,CAACE,IAAI,CAACR,KAAK;MACvC,MAAMgB,GAAG,GAAGZ,MAAM,CAACE,OAAO,CAACE,IAAI,CAACQ,GAAG;MAEnC,OAAO;QACL,GAAGb,KAAK;QACR;QACAL,QAAQ,EAAEK,KAAK,CAACL,QAAQ,CAACmB,MAAM,CAAC;UAC9BV,IAAI;UACJE,KAAK;UACLC,EAAE;UACFC,MAAM;UACNC,MAAM;UACNC,MAAM;UACNC,OAAO;UACPC,WAAW;UACXf,KAAK;UACLgB;QACF,CAAC;MACH,CAAC;IACH,KAAK3B,cAAc;MACjB,OAAO;QACL,GAAGc,KAAK;QACRL,QAAQ,EAAEK,KAAK,CAACL,QAAQ,CAACoB,MAAM,CAC5BC,OAAO,IAAKA,OAAO,CAACC,EAAE,KAAKhB,MAAM,CAACE,OAAO;MAE9C,CAAC;IAEH,KAAKf,gBAAgB;MACnB,MAAM8B,SAAS,GACbjB,MAAM,CAACE,OAAO,KAAK,KAAK,GACpBH,KAAK,CAACL,QAAQ,CAACwB,IAAI,CAAC,CAACC,CAAC,EAAEC,CAAC,KAAK;QAC5B,OAAOD,CAAC,CAAChB,IAAI,CAACkB,WAAW,EAAE,GAAGD,CAAC,CAACjB,IAAI,CAACkB,WAAW,EAAE;MACpD,CAAC,CAAC,GACFtB,KAAK,CAACL,QAAQ,CAACwB,IAAI,CAAC,CAACC,CAAC,EAAEC,CAAC,KAAK;QAC5B,OAAOD,CAAC,CAAChB,IAAI,CAACkB,WAAW,EAAE,GAAGD,CAAC,CAACjB,IAAI,CAACkB,WAAW,EAAE;MACpD,CAAC,CAAC;MACR,OAAO;QACL,GAAGtB,KAAK;QACRL,QAAQ,EAAEuB;MACZ,CAAC;IAEH,KAAK7B,cAAc;MACjB,MAAMkC,OAAO,GAAGvB,KAAK,CAACL,QAAQ,CAACwB,IAAI,CAAC,CAACC,CAAC,EAAEC,CAAC,KAAKD,CAAC,CAACV,MAAM,GAAGW,CAAC,CAACX,MAAM,CAAC;MAClE,MAAMc,OAAO,GAAGxB,KAAK,CAACL,QAAQ,CAACwB,IAAI,CAAC,CAACC,CAAC,EAAEC,CAAC,KAAKD,CAAC,CAACV,MAAM,GAAGW,CAAC,CAACX,MAAM,CAAC;MAClE,MAAMe,UAAU,GAAGxB,MAAM,CAACE,OAAO;MACjC,IAAIsB,UAAU,KAAK,QAAQ,EACzB,OAAO;QACL,GAAGzB,KAAK;QACRL,QAAQ,EAAE4B;MACZ,CAAC,CAAC,KACC,IAAIE,UAAU,KAAK,QAAQ,EAC9B,OAAO;QACL,GAAGzB,KAAK;QACRL,QAAQ,EAAE6B;MACZ,CAAC;MACH;IAEF,KAAKjC,cAAc;MACjBmC,OAAO,CAACC,GAAG,CAAC,cAAc,EAAE1B,MAAM,CAACE,OAAO,CAAC;MAC3C,OAAO;QACL,GAAGH,KAAK;QACRF,YAAY,EAAEG,MAAM,CAACE;MACvB,CAAC;IAEH,KAAKb,iBAAiB;MACpB,IAAIsC,OAAO,GAAG5B,KAAK,CAACL,QAAQ,CAACoB,MAAM,CAAEc,CAAC,IAAK,OAAOA,CAAC,CAACZ,EAAE,KAAK,QAAQ,CAAC;MACpE,IAAIa,GAAG,GAAG9B,KAAK,CAACL,QAAQ,CAACoB,MAAM,CAAEc,CAAC,IAAK,OAAOA,CAAC,CAACZ,EAAE,KAAK,QAAQ,CAAC;MAChE,IAAIhB,MAAM,CAACE,OAAO,KAAK,UAAU,EAAE;QACjCuB,OAAO,CAACC,GAAG,CAAC,mBAAmB,EAAE1B,MAAM,CAACE,OAAO,CAAC;QAChD,OAAO;UACL,GAAGH,KAAK;UACRL,QAAQ,EAAEiC;QACZ,CAAC;MACH,CAAC,MAAM,IAAI3B,MAAM,CAACE,OAAO,KAAK,KAAK,EAAE;QACnCuB,OAAO,CAACC,GAAG,CAAC,mBAAmB,EAAE1B,MAAM,CAACE,OAAO,CAAC;QAChD,OAAO;UACL,GAAGH,KAAK;UACRL,QAAQ,EAAEmC;QACZ,CAAC;MACH,CAAC,MAAM,IAAI7B,MAAM,CAACE,OAAO,KAAK,KAAK,EAAE;QACnCuB,OAAO,CAACC,GAAG,CAAC,mBAAmB,EAAE1B,MAAM,CAACE,OAAO,CAAC;QAChD,OAAO;UACL,GAAGH,KAAK;UACRL,QAAQ,EAAEK,KAAK,CAACL;QAClB,CAAC;MACH;MACA;IAEF,KAAKH,cAAc;MACjB,OAAO;QACL,GAAGQ,KAAK;QACRL,QAAQ,EAAEM,MAAM,CAACE;MACnB,CAAC;IAEH,KAAKV,YAAY;MACjBsC,EAAE;IACF;MACE,OAAO;QAAE,GAAG/B;MAAM,CAAC;EAAC;AAE1B,CAAC;AAED,eAAeD,WAAW;;AAE1B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA"},"metadata":{},"sourceType":"module"}