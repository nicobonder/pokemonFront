{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Nicolas\\\\Documents\\\\Nico\\\\Henry\\\\PI\\\\PI-Pokemon-main\\\\client\\\\src\\\\components\\\\Pokemons\\\\Pokemons.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport s from './Pokemons.module.css';\nimport { useDispatch, useSelector } from \"react-redux\";\nimport Paging from '../Paging/Paging';\nimport * as actions from '../../redux/actions';\n\n//importo para poder mapear todas las cards\nimport PokeCard from '../PokeCard/PokeCard';\nimport Filters from '../Filters/Filters';\nimport { Link } from 'react-router-dom';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function Pokemons() {\n  _s();\n  const dispatch = useDispatch();\n  const pokemons = useSelector(state => state.pokemons);\n  const types = useSelector(state => state.types);\n  const filterByType = useSelector(state => state.filterByType);\n\n  //PAGINADO.\n  const [currentPage, setCurrentPage] = useState(1); //Pokemons va a empezar en la primera pagina\n  const [pokemonsPerPage, setPokemonsPerPage] = useState(12); //Traigo 12 poke por pagina\n  const indexOfLastPokemon = currentPage * pokemonsPerPage; //empieza en 12. Es el indice del ultimo poke que tengo en la pagina\n  const indexOfFirstPokemon = indexOfLastPokemon - pokemonsPerPage; //empieza en 0. 12-12 . Es el indice del primer pokemon\n  const currentPokemons = pokemons.slice(indexOfFirstPokemon, indexOfLastPokemon); //corto los poke q quiero de la array de pokemons\n\n  const prevPage = currentPage - 1;\n  function paging(pageNumber) {\n    setCurrentPage(pageNumber); //setea la pag actual con el nro de pagina que le paso desde el Paging\n  }\n\n  function nextHandler() {\n    const totalPokemons = pokemons.length;\n    const nextPage = currentPage + 1;\n    const firstIndex = nextPage * pokemonsPerPage;\n    if (firstIndex === totalPokemons) return; //si el prim\n  }\n\n  React.useEffect(() => {\n    dispatch(actions.getPokemons());\n    dispatch(actions.getTypes());\n  }, [dispatch]);\n  console.log('filteredBytype', filterByType);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: s.pokemonsSection,\n    children: [/*#__PURE__*/_jsxDEV(Filters, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: s.pokePaged,\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: s.allPokemons,\n        children: currentPokemons.length > 0 ? currentPokemons === null || currentPokemons === void 0 ? void 0 : currentPokemons.map(poke => {\n          return /*#__PURE__*/_jsxDEV(PokeCard, {\n            id: poke.id,\n            name: poke.name,\n            image: poke.img,\n            types: poke.types\n          }, poke.id, false, {\n            fileName: _jsxFileName,\n            lineNumber: 56,\n            columnNumber: 17\n          }, this);\n        }) : /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n            children: \"Loading...\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 63,\n            columnNumber: 23\n          }, this), \" \"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 63,\n          columnNumber: 18\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Paging, {\n        pokemonsPerPage: pokemonsPerPage,\n        pokemons: pokemons.length,\n        paging: paging\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 49,\n    columnNumber: 5\n  }, this);\n}\n_s(Pokemons, \"XX6Oq/p2u4uE/MSuLXDZl+6cBzo=\", false, function () {\n  return [useDispatch, useSelector, useSelector, useSelector];\n});\n_c = Pokemons;\nvar _c;\n$RefreshReg$(_c, \"Pokemons\");","map":{"version":3,"names":["React","useState","s","useDispatch","useSelector","Paging","actions","PokeCard","Filters","Link","Pokemons","dispatch","pokemons","state","types","filterByType","currentPage","setCurrentPage","pokemonsPerPage","setPokemonsPerPage","indexOfLastPokemon","indexOfFirstPokemon","currentPokemons","slice","prevPage","paging","pageNumber","nextHandler","totalPokemons","length","nextPage","firstIndex","useEffect","getPokemons","getTypes","console","log","pokemonsSection","pokePaged","allPokemons","map","poke","id","name","img"],"sources":["C:/Users/Nicolas/Documents/Nico/Henry/PI/PI-Pokemon-main/client/src/components/Pokemons/Pokemons.js"],"sourcesContent":["import React, { useState } from 'react'\r\nimport s from './Pokemons.module.css'\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport Paging from '../Paging/Paging';\r\n\r\nimport * as actions from '../../redux/actions'\r\n\r\n//importo para poder mapear todas las cards\r\nimport PokeCard from '../PokeCard/PokeCard';\r\nimport Filters from '../Filters/Filters';\r\nimport { Link } from 'react-router-dom';\r\n\r\nexport default function Pokemons() {\r\n  const dispatch = useDispatch();\r\n  const pokemons = useSelector((state)=> state.pokemons);\r\n  const types = useSelector((state)=> state.types);\r\n  const filterByType = useSelector((state)=> state.filterByType);\r\n\r\n   //PAGINADO.\r\n   const [currentPage, setCurrentPage] = useState(1); //Pokemons va a empezar en la primera pagina\r\n   const [pokemonsPerPage, setPokemonsPerPage] = useState(12); //Traigo 12 poke por pagina\r\n   const indexOfLastPokemon = currentPage * pokemonsPerPage //empieza en 12. Es el indice del ultimo poke que tengo en la pagina\r\n   const indexOfFirstPokemon = indexOfLastPokemon - pokemonsPerPage //empieza en 0. 12-12 . Es el indice del primer pokemon\r\n   const currentPokemons = pokemons.slice(indexOfFirstPokemon, indexOfLastPokemon) //corto los poke q quiero de la array de pokemons\r\n\r\n   const prevPage = currentPage - 1;\r\n   \r\n   function paging(pageNumber) {\r\n     setCurrentPage(pageNumber)   //setea la pag actual con el nro de pagina que le paso desde el Paging\r\n    }\r\n    \r\n    function nextHandler() {\r\n      const totalPokemons = pokemons.length\r\n      const nextPage = currentPage + 1;\r\n      const firstIndex = nextPage * pokemonsPerPage\r\n      if(firstIndex === totalPokemons) return; //si el prim\r\n  } \r\n\r\n\r\n  React.useEffect(() => {\r\n    dispatch(actions.getPokemons());\r\n    dispatch(actions.getTypes());\r\n  },[dispatch])\r\n\r\n  console.log('filteredBytype', filterByType)\r\n\r\n\r\n  return (\r\n    <div className={s.pokemonsSection}>\r\n      <Filters />\r\n      <div className={s.pokePaged}>\r\n        <div className={s.allPokemons}>\r\n          {currentPokemons.length > 0 ?\r\n            currentPokemons?.map((poke) => {\r\n              return (\r\n                <PokeCard \r\n                key={poke.id} \r\n                id={poke.id} \r\n                name={poke.name} \r\n                image={poke.img} \r\n                types={poke.types}/>\r\n              )\r\n            }) : <div><h3>Loading...</h3> </div>\r\n          } \r\n        \r\n        </div>\r\n        \r\n        <Paging\r\n          pokemonsPerPage={pokemonsPerPage}\r\n          pokemons = {pokemons.length}\r\n          paging = {paging}\r\n        />\r\n      </div>\r\n    </div>  \r\n  )\r\n}\r\n\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,OAAOC,CAAC,MAAM,uBAAuB;AACrC,SAASC,WAAW,EAAEC,WAAW,QAAQ,aAAa;AACtD,OAAOC,MAAM,MAAM,kBAAkB;AAErC,OAAO,KAAKC,OAAO,MAAM,qBAAqB;;AAE9C;AACA,OAAOC,QAAQ,MAAM,sBAAsB;AAC3C,OAAOC,OAAO,MAAM,oBAAoB;AACxC,SAASC,IAAI,QAAQ,kBAAkB;AAAC;AAExC,eAAe,SAASC,QAAQ,GAAG;EAAA;EACjC,MAAMC,QAAQ,GAAGR,WAAW,EAAE;EAC9B,MAAMS,QAAQ,GAAGR,WAAW,CAAES,KAAK,IAAIA,KAAK,CAACD,QAAQ,CAAC;EACtD,MAAME,KAAK,GAAGV,WAAW,CAAES,KAAK,IAAIA,KAAK,CAACC,KAAK,CAAC;EAChD,MAAMC,YAAY,GAAGX,WAAW,CAAES,KAAK,IAAIA,KAAK,CAACE,YAAY,CAAC;;EAE7D;EACA,MAAM,CAACC,WAAW,EAAEC,cAAc,CAAC,GAAGhB,QAAQ,CAAC,CAAC,CAAC,CAAC,CAAC;EACnD,MAAM,CAACiB,eAAe,EAAEC,kBAAkB,CAAC,GAAGlB,QAAQ,CAAC,EAAE,CAAC,CAAC,CAAC;EAC5D,MAAMmB,kBAAkB,GAAGJ,WAAW,GAAGE,eAAe,EAAC;EACzD,MAAMG,mBAAmB,GAAGD,kBAAkB,GAAGF,eAAe,EAAC;EACjE,MAAMI,eAAe,GAAGV,QAAQ,CAACW,KAAK,CAACF,mBAAmB,EAAED,kBAAkB,CAAC,EAAC;;EAEhF,MAAMI,QAAQ,GAAGR,WAAW,GAAG,CAAC;EAEhC,SAASS,MAAM,CAACC,UAAU,EAAE;IAC1BT,cAAc,CAACS,UAAU,CAAC,EAAG;EAC9B;;EAEA,SAASC,WAAW,GAAG;IACrB,MAAMC,aAAa,GAAGhB,QAAQ,CAACiB,MAAM;IACrC,MAAMC,QAAQ,GAAGd,WAAW,GAAG,CAAC;IAChC,MAAMe,UAAU,GAAGD,QAAQ,GAAGZ,eAAe;IAC7C,IAAGa,UAAU,KAAKH,aAAa,EAAE,OAAO,CAAC;EAC7C;;EAGA5B,KAAK,CAACgC,SAAS,CAAC,MAAM;IACpBrB,QAAQ,CAACL,OAAO,CAAC2B,WAAW,EAAE,CAAC;IAC/BtB,QAAQ,CAACL,OAAO,CAAC4B,QAAQ,EAAE,CAAC;EAC9B,CAAC,EAAC,CAACvB,QAAQ,CAAC,CAAC;EAEbwB,OAAO,CAACC,GAAG,CAAC,gBAAgB,EAAErB,YAAY,CAAC;EAG3C,oBACE;IAAK,SAAS,EAAEb,CAAC,CAACmC,eAAgB;IAAA,wBAChC,QAAC,OAAO;MAAA;MAAA;MAAA;IAAA,QAAG,eACX;MAAK,SAAS,EAAEnC,CAAC,CAACoC,SAAU;MAAA,wBAC1B;QAAK,SAAS,EAAEpC,CAAC,CAACqC,WAAY;QAAA,UAC3BjB,eAAe,CAACO,MAAM,GAAG,CAAC,GACzBP,eAAe,aAAfA,eAAe,uBAAfA,eAAe,CAAEkB,GAAG,CAAEC,IAAI,IAAK;UAC7B,oBACE,QAAC,QAAQ;YAET,EAAE,EAAEA,IAAI,CAACC,EAAG;YACZ,IAAI,EAAED,IAAI,CAACE,IAAK;YAChB,KAAK,EAAEF,IAAI,CAACG,GAAI;YAChB,KAAK,EAAEH,IAAI,CAAC3B;UAAM,GAJb2B,IAAI,CAACC,EAAE;YAAA;YAAA;YAAA;UAAA,QAIQ;QAExB,CAAC,CAAC,gBAAG;UAAA,wBAAK;YAAA;UAAA;YAAA;YAAA;YAAA;UAAA,QAAmB;QAAA;UAAA;UAAA;UAAA;QAAA;MAAO;QAAA;QAAA;QAAA;MAAA,QAGlC,eAEN,QAAC,MAAM;QACL,eAAe,EAAExB,eAAgB;QACjC,QAAQ,EAAIN,QAAQ,CAACiB,MAAO;QAC5B,MAAM,EAAIJ;MAAO;QAAA;QAAA;QAAA;MAAA,QACjB;IAAA;MAAA;MAAA;MAAA;IAAA,QACE;EAAA;IAAA;IAAA;IAAA;EAAA,QACF;AAEV;AAAC,GA/DuBf,QAAQ;EAAA,QACbP,WAAW,EACXC,WAAW,EACdA,WAAW,EACJA,WAAW;AAAA;AAAA,KAJVM,QAAQ;AAAA;AAAA"},"metadata":{},"sourceType":"module"}