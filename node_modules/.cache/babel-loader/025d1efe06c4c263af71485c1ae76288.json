{"ast":null,"code":"import { GET_POKEMONS, GET_POKEMON_DETAIL, CREATE_POKEMON, DELETE_POKEMON, GET_TYPES, SORT_BY_ALPHABET, SORT_BY_ATTACK, FILTER_BY_CREATED, FILTER_BY_TYPE, SEARCH_POKEMON, CLEAN_FILTER } from \"./actions\";\nexport default rootReducer;\n\n// case SORT_BY_ATTACK:\n//     const sortAttack = action.payload\n//     if(sortAttack === \"- to +\")\n//     return {\n//         ...state,\n//         pokemons: state.pokemons.sort((a, b) => a.attack > b.attack)}\n//     else if(sortAttack === \"+ to -\")\n//         return {\n//             ...state,\n//             pokemons: state.pokemons.sort((a, b) => a.attack < b.attack)\n//         }\n//     break;\n\n// case SORT_BY_ATTACK:\n//         const sortAsc = state.pokemons.sort((a, b) => a.attack > b.attack)\n//         const sortDes = state.pokemons.sort((a, b) => a.attack < b.attack)\n//         const sortAttack = action.payload\n//             if(sortAttack === \"- to +\")\n//             return {\n//                 ...state,\n//                 pokemons: sortAsc\n//             }\n//             else if(sortAttack === \"+ to -\")\n//                 return {\n//                     ...state,\n//                     pokemons: sortDes\n//                 }\n//             break;\n\n//antes de stackoverflow\n//SORTS Y FILTERS\n// case SORT_BY_ALPHABET:\n//   const sortAlpha =\n//     action.payload === \"a-z\"\n//       ? state.pokemons.sort((a, b) => {\n//           return a.name.toLowerCase() > b.name.toLowerCase();\n//         })\n//       : state.pokemons.sort((a, b) => {\n//           return a.name.toLowerCase() < b.name.toLowerCase();\n//         });\n//   return {\n//     ...state,\n//     pokemons: sortAlpha,\n//   };\n\n// case SORT_BY_ATTACK:\n//   let sortedPoke = action.payload === \"- to +\" ? state.pokemons.sort((a, b) => {\n//       if(a.attack > b.attack){return 1;} if(a.attack < b.attack){return -1;} return 0;}) : state.pokemons.sort((a, b) => {if(a.attack > b.attack){return -1;} if(a.attack < b.attack){return 1;} return 0;});\n//       console.log('antes', state.pokemons)\n//   return {\n//       ...state,\n//       pokemons: sortedPoke,\n//     }\n\n// case FILTER_BY_TYPE:\n//   let type = action.payload;\n//   console.log(action.payload)\n//   let allPoke = state.allPokemons;\n//   let pokemonFiltered = state.pokemons.filter((poke) => poke.types.includes(type))  \n//   let test = action.payload === 'all' ? allPoke : pokemonFiltered\n\n//   console.log(\"filterByType\", action.payload);\n//   if(pokemonFiltered.length > 0){\n//     return {\n//       ...state,\n//       pokemons: test}\n//   } else {\n//     return{\n//       ...state, \n//       pokemons: state.allPokemons\n//     }\n//   }\n\n// case FILTER_BY_CREATED:\n//  let created = state.pokemons.filter((poke) => poke.createdInDB)\n//  let apiPoke = state.allPokemons.filter((poke) => !poke.createdInDB)\n//  let createdFilter = action.payload === 'Data Base' ? created : apiPoke \n//  return {\n//   ...state,\n//   pokemons: action.payload === 'All' ? state.allPokemons : createdFilter\n// }\n\n// case CLEAN_FILTER: \n// return{\n//   ...state,\n//   pokemons: state.pokemons,\n// }\n// default:\n//   return { ...state };\n// }\n// };\n\n//stackoverflow\nconst initialState = {\n  pokemons: [],\n  allPokemons: [],\n  pokemonDetail: {},\n  types: [],\n  filterBy: {\n    type: \"all\",\n    created: \"all\"\n  },\n  sortBy: {\n    alpha: \"a-z\",\n    attack: \"- to +\"\n  },\n  filters: {},\n  search: \"\"\n};\nconst rootReducer = function () {\n  let state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : initialState;\n  let action = arguments.length > 1 ? arguments[1] : undefined;\n  switch (action.type) {\n    case GET_POKEMONS:\n      return {\n        ...state,\n        pokemons: action.payload,\n        allPokemons: action.payload\n      };\n    case GET_POKEMON_DETAIL:\n      return {\n        ...state,\n        pokemonDetail: action.payload\n      };\n    case SEARCH_POKEMON:\n      return {\n        ...state,\n        pokemons: action.payload\n      };\n    case GET_TYPES:\n      return {\n        ...state,\n        types: action.payload\n      };\n    case CREATE_POKEMON:\n      const name = action.payload.data.name;\n      const speed = action.payload.data.speed;\n      const hp = action.payload.data.hp;\n      const height = action.payload.data.height;\n      const weight = action.payload.data.weight;\n      const attack = action.payload.data.attack;\n      const defense = action.payload.data.defense;\n      const createdInDB = action.payload.data.createdInDB;\n      const types = action.payload.data.types;\n      const img = action.payload.data.img;\n      return {\n        ...state,\n        pokemons: state.pokemons.concat({\n          name,\n          speed,\n          hp,\n          height,\n          weight,\n          attack,\n          defense,\n          createdInDB,\n          types,\n          img\n        })\n      };\n    case DELETE_POKEMON:\n      return {\n        ...state,\n        pokemons: state.pokemons.filter(pokemon => pokemon.id !== action.payload)\n      };\n\n    //SORTS Y FILTERS\n    case SORT_BY_ALPHABET:\n      return {\n        ...state,\n        sortBy: {\n          ...state.sortBy,\n          alpha: action.payload\n        }\n      };\n    case SORT_BY_ATTACK:\n      return {\n        ...state,\n        sortBy: {\n          ...state.sortBy,\n          attack: action.payload\n        }\n      };\n    case FILTER_BY_TYPE:\n      return {\n        ...state,\n        filterBy: {\n          ...state.filterBy,\n          type: action.payload\n        }\n      };\n    case FILTER_BY_CREATED:\n      return {\n        ...state,\n        filterBy: {\n          ...state.filterBy,\n          created: action.payload\n        }\n      };\n    case CLEAN_FILTER:\n      return {\n        ...state,\n        sortBy: state.sortBy,\n        filterBy: state.filterBy,\n        search: state.search\n      };\n    default:\n      return {\n        ...state\n      };\n  }\n};","map":{"version":3,"names":["GET_POKEMONS","GET_POKEMON_DETAIL","CREATE_POKEMON","DELETE_POKEMON","GET_TYPES","SORT_BY_ALPHABET","SORT_BY_ATTACK","FILTER_BY_CREATED","FILTER_BY_TYPE","SEARCH_POKEMON","CLEAN_FILTER","rootReducer","initialState","pokemons","allPokemons","pokemonDetail","types","filterBy","type","created","sortBy","alpha","attack","filters","search","state","action","payload","name","data","speed","hp","height","weight","defense","createdInDB","img","concat","filter","pokemon","id"],"sources":["C:/Users/Nicolas/Documents/Nico/Henry/PI/PI-Pokemon-main/client/src/redux/reducer.js"],"sourcesContent":["import {\r\n  GET_POKEMONS,\r\n  GET_POKEMON_DETAIL,\r\n  CREATE_POKEMON,\r\n  DELETE_POKEMON,\r\n  GET_TYPES,\r\n  SORT_BY_ALPHABET,\r\n  SORT_BY_ATTACK,\r\n  FILTER_BY_CREATED,\r\n  FILTER_BY_TYPE,\r\n  SEARCH_POKEMON,\r\n  CLEAN_FILTER,\r\n} from \"./actions\";\r\n\r\n\r\n\r\nexport default rootReducer;\r\n\r\n// case SORT_BY_ATTACK:\r\n//     const sortAttack = action.payload\r\n//     if(sortAttack === \"- to +\")\r\n//     return {\r\n//         ...state,\r\n//         pokemons: state.pokemons.sort((a, b) => a.attack > b.attack)}\r\n//     else if(sortAttack === \"+ to -\")\r\n//         return {\r\n//             ...state,\r\n//             pokemons: state.pokemons.sort((a, b) => a.attack < b.attack)\r\n//         }\r\n//     break;\r\n\r\n// case SORT_BY_ATTACK:\r\n//         const sortAsc = state.pokemons.sort((a, b) => a.attack > b.attack)\r\n//         const sortDes = state.pokemons.sort((a, b) => a.attack < b.attack)\r\n//         const sortAttack = action.payload\r\n//             if(sortAttack === \"- to +\")\r\n//             return {\r\n//                 ...state,\r\n//                 pokemons: sortAsc\r\n//             }\r\n//             else if(sortAttack === \"+ to -\")\r\n//                 return {\r\n//                     ...state,\r\n//                     pokemons: sortDes\r\n//                 }\r\n//             break;\r\n\r\n\r\n\r\n//antes de stackoverflow\r\n//SORTS Y FILTERS\r\n// case SORT_BY_ALPHABET:\r\n//   const sortAlpha =\r\n//     action.payload === \"a-z\"\r\n//       ? state.pokemons.sort((a, b) => {\r\n//           return a.name.toLowerCase() > b.name.toLowerCase();\r\n//         })\r\n//       : state.pokemons.sort((a, b) => {\r\n//           return a.name.toLowerCase() < b.name.toLowerCase();\r\n//         });\r\n//   return {\r\n//     ...state,\r\n//     pokemons: sortAlpha,\r\n//   };\r\n\r\n// case SORT_BY_ATTACK:\r\n//   let sortedPoke = action.payload === \"- to +\" ? state.pokemons.sort((a, b) => {\r\n//       if(a.attack > b.attack){return 1;} if(a.attack < b.attack){return -1;} return 0;}) : state.pokemons.sort((a, b) => {if(a.attack > b.attack){return -1;} if(a.attack < b.attack){return 1;} return 0;});\r\n//       console.log('antes', state.pokemons)\r\n//   return {\r\n//       ...state,\r\n//       pokemons: sortedPoke,\r\n//     }\r\n  \r\n\r\n// case FILTER_BY_TYPE:\r\n//   let type = action.payload;\r\n//   console.log(action.payload)\r\n//   let allPoke = state.allPokemons;\r\n//   let pokemonFiltered = state.pokemons.filter((poke) => poke.types.includes(type))  \r\n//   let test = action.payload === 'all' ? allPoke : pokemonFiltered\r\n\r\n//   console.log(\"filterByType\", action.payload);\r\n//   if(pokemonFiltered.length > 0){\r\n//     return {\r\n//       ...state,\r\n//       pokemons: test}\r\n//   } else {\r\n//     return{\r\n//       ...state, \r\n//       pokemons: state.allPokemons\r\n//     }\r\n//   }\r\n\r\n// case FILTER_BY_CREATED:\r\n//  let created = state.pokemons.filter((poke) => poke.createdInDB)\r\n//  let apiPoke = state.allPokemons.filter((poke) => !poke.createdInDB)\r\n//  let createdFilter = action.payload === 'Data Base' ? created : apiPoke \r\n//  return {\r\n//   ...state,\r\n//   pokemons: action.payload === 'All' ? state.allPokemons : createdFilter\r\n// }\r\n\r\n// case CLEAN_FILTER: \r\n// return{\r\n//   ...state,\r\n//   pokemons: state.pokemons,\r\n// }\r\n// default:\r\n//   return { ...state };\r\n// }\r\n// };\r\n\r\n//stackoverflow\r\nconst initialState = {\r\n  pokemons: [],\r\n  allPokemons: [],\r\n  pokemonDetail: {},\r\n  types: [],\r\n  filterBy: {\r\n    type: \"all\",\r\n    created: \"all\"\r\n  },\r\n  sortBy: {\r\n    alpha: \"a-z\",\r\n    attack: \"- to +\",\r\n  },\r\n  filters: {},\r\n  search: \"\",\r\n\r\n};\r\n\r\nconst rootReducer = (state = initialState, action) => {\r\n  switch (action.type) {\r\n    case GET_POKEMONS:\r\n      return {\r\n        ...state,\r\n        pokemons: action.payload,\r\n        allPokemons: action.payload,\r\n      };\r\n    case GET_POKEMON_DETAIL:\r\n      return {\r\n        ...state,\r\n        pokemonDetail: action.payload,\r\n      };\r\n    \r\n    case SEARCH_POKEMON:\r\n      return {\r\n        ...state,\r\n        pokemons: action.payload,\r\n      };\r\n\r\n    case GET_TYPES:\r\n      return {\r\n        ...state,\r\n        types: action.payload,\r\n      };\r\n    case CREATE_POKEMON:\r\n      const name = action.payload.data.name;\r\n      const speed = action.payload.data.speed;\r\n      const hp = action.payload.data.hp;\r\n      const height = action.payload.data.height;\r\n      const weight = action.payload.data.weight;\r\n      const attack = action.payload.data.attack;\r\n      const defense = action.payload.data.defense;\r\n      const createdInDB = action.payload.data.createdInDB;\r\n      const types = action.payload.data.types;\r\n      const img = action.payload.data.img;\r\n\r\n      return {\r\n        ...state,\r\n        pokemons: state.pokemons.concat({\r\n          name,\r\n          speed,\r\n          hp,\r\n          height,\r\n          weight,\r\n          attack,\r\n          defense,\r\n          createdInDB,\r\n          types,\r\n          img,\r\n        }),\r\n      };\r\n    case DELETE_POKEMON:\r\n      return {\r\n        ...state,\r\n        pokemons: state.pokemons.filter(\r\n          (pokemon) => pokemon.id !== action.payload\r\n        ),\r\n      };\r\n\r\n      //SORTS Y FILTERS\r\n    case SORT_BY_ALPHABET:\r\n      \r\n      return {\r\n        ...state,\r\n        sortBy: {\r\n          ...state.sortBy,\r\n          alpha: action.payload,\r\n        }\r\n      };\r\n\r\n    case SORT_BY_ATTACK:\r\n      return {\r\n          ...state,\r\n          sortBy: {\r\n            ...state.sortBy,\r\n            attack: action.payload,\r\n          }\r\n        }\r\n      \r\n\r\n    case FILTER_BY_TYPE:\r\n      return {\r\n          ...state,\r\n         filterBy: {\r\n          ...state.filterBy,\r\n          type: action.payload,\r\n         }\r\n      }\r\n\r\n    case FILTER_BY_CREATED:\r\n     return {\r\n      ...state,\r\n      filterBy: {\r\n        ...state.filterBy,\r\n        created: action.payload,\r\n      }\r\n     }\r\n      \r\n    case CLEAN_FILTER: \r\n    return{\r\n      ...state,\r\n      sortBy: state.sortBy,\r\n        filterBy: state.filterBy,\r\n        search: state.search,\r\n    }\r\n    default:\r\n      return { ...state };\r\n  }\r\n};"],"mappings":"AAAA,SACEA,YAAY,EACZC,kBAAkB,EAClBC,cAAc,EACdC,cAAc,EACdC,SAAS,EACTC,gBAAgB,EAChBC,cAAc,EACdC,iBAAiB,EACjBC,cAAc,EACdC,cAAc,EACdC,YAAY,QACP,WAAW;AAIlB,eAAeC,WAAW;;AAE1B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAIA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAGA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,MAAMC,YAAY,GAAG;EACnBC,QAAQ,EAAE,EAAE;EACZC,WAAW,EAAE,EAAE;EACfC,aAAa,EAAE,CAAC,CAAC;EACjBC,KAAK,EAAE,EAAE;EACTC,QAAQ,EAAE;IACRC,IAAI,EAAE,KAAK;IACXC,OAAO,EAAE;EACX,CAAC;EACDC,MAAM,EAAE;IACNC,KAAK,EAAE,KAAK;IACZC,MAAM,EAAE;EACV,CAAC;EACDC,OAAO,EAAE,CAAC,CAAC;EACXC,MAAM,EAAE;AAEV,CAAC;AAED,MAAMb,WAAW,GAAG,YAAkC;EAAA,IAAjCc,KAAK,uEAAGb,YAAY;EAAA,IAAEc,MAAM;EAC/C,QAAQA,MAAM,CAACR,IAAI;IACjB,KAAKlB,YAAY;MACf,OAAO;QACL,GAAGyB,KAAK;QACRZ,QAAQ,EAAEa,MAAM,CAACC,OAAO;QACxBb,WAAW,EAAEY,MAAM,CAACC;MACtB,CAAC;IACH,KAAK1B,kBAAkB;MACrB,OAAO;QACL,GAAGwB,KAAK;QACRV,aAAa,EAAEW,MAAM,CAACC;MACxB,CAAC;IAEH,KAAKlB,cAAc;MACjB,OAAO;QACL,GAAGgB,KAAK;QACRZ,QAAQ,EAAEa,MAAM,CAACC;MACnB,CAAC;IAEH,KAAKvB,SAAS;MACZ,OAAO;QACL,GAAGqB,KAAK;QACRT,KAAK,EAAEU,MAAM,CAACC;MAChB,CAAC;IACH,KAAKzB,cAAc;MACjB,MAAM0B,IAAI,GAAGF,MAAM,CAACC,OAAO,CAACE,IAAI,CAACD,IAAI;MACrC,MAAME,KAAK,GAAGJ,MAAM,CAACC,OAAO,CAACE,IAAI,CAACC,KAAK;MACvC,MAAMC,EAAE,GAAGL,MAAM,CAACC,OAAO,CAACE,IAAI,CAACE,EAAE;MACjC,MAAMC,MAAM,GAAGN,MAAM,CAACC,OAAO,CAACE,IAAI,CAACG,MAAM;MACzC,MAAMC,MAAM,GAAGP,MAAM,CAACC,OAAO,CAACE,IAAI,CAACI,MAAM;MACzC,MAAMX,MAAM,GAAGI,MAAM,CAACC,OAAO,CAACE,IAAI,CAACP,MAAM;MACzC,MAAMY,OAAO,GAAGR,MAAM,CAACC,OAAO,CAACE,IAAI,CAACK,OAAO;MAC3C,MAAMC,WAAW,GAAGT,MAAM,CAACC,OAAO,CAACE,IAAI,CAACM,WAAW;MACnD,MAAMnB,KAAK,GAAGU,MAAM,CAACC,OAAO,CAACE,IAAI,CAACb,KAAK;MACvC,MAAMoB,GAAG,GAAGV,MAAM,CAACC,OAAO,CAACE,IAAI,CAACO,GAAG;MAEnC,OAAO;QACL,GAAGX,KAAK;QACRZ,QAAQ,EAAEY,KAAK,CAACZ,QAAQ,CAACwB,MAAM,CAAC;UAC9BT,IAAI;UACJE,KAAK;UACLC,EAAE;UACFC,MAAM;UACNC,MAAM;UACNX,MAAM;UACNY,OAAO;UACPC,WAAW;UACXnB,KAAK;UACLoB;QACF,CAAC;MACH,CAAC;IACH,KAAKjC,cAAc;MACjB,OAAO;QACL,GAAGsB,KAAK;QACRZ,QAAQ,EAAEY,KAAK,CAACZ,QAAQ,CAACyB,MAAM,CAC5BC,OAAO,IAAKA,OAAO,CAACC,EAAE,KAAKd,MAAM,CAACC,OAAO;MAE9C,CAAC;;IAED;IACF,KAAKtB,gBAAgB;MAEnB,OAAO;QACL,GAAGoB,KAAK;QACRL,MAAM,EAAE;UACN,GAAGK,KAAK,CAACL,MAAM;UACfC,KAAK,EAAEK,MAAM,CAACC;QAChB;MACF,CAAC;IAEH,KAAKrB,cAAc;MACjB,OAAO;QACH,GAAGmB,KAAK;QACRL,MAAM,EAAE;UACN,GAAGK,KAAK,CAACL,MAAM;UACfE,MAAM,EAAEI,MAAM,CAACC;QACjB;MACF,CAAC;IAGL,KAAKnB,cAAc;MACjB,OAAO;QACH,GAAGiB,KAAK;QACTR,QAAQ,EAAE;UACT,GAAGQ,KAAK,CAACR,QAAQ;UACjBC,IAAI,EAAEQ,MAAM,CAACC;QACd;MACH,CAAC;IAEH,KAAKpB,iBAAiB;MACrB,OAAO;QACN,GAAGkB,KAAK;QACRR,QAAQ,EAAE;UACR,GAAGQ,KAAK,CAACR,QAAQ;UACjBE,OAAO,EAAEO,MAAM,CAACC;QAClB;MACD,CAAC;IAEF,KAAKjB,YAAY;MACjB,OAAM;QACJ,GAAGe,KAAK;QACRL,MAAM,EAAEK,KAAK,CAACL,MAAM;QAClBH,QAAQ,EAAEQ,KAAK,CAACR,QAAQ;QACxBO,MAAM,EAAEC,KAAK,CAACD;MAClB,CAAC;IACD;MACE,OAAO;QAAE,GAAGC;MAAM,CAAC;EAAC;AAE1B,CAAC"},"metadata":{},"sourceType":"module"}