[{"C:\\Users\\Nicolas\\Documents\\Nico\\Henry\\PI\\PI-Pokemon-main\\client\\src\\index.js":"1","C:\\Users\\Nicolas\\Documents\\Nico\\Henry\\PI\\PI-Pokemon-main\\client\\src\\App.js":"2","C:\\Users\\Nicolas\\Documents\\Nico\\Henry\\PI\\PI-Pokemon-main\\client\\src\\reportWebVitals.js":"3","C:\\Users\\Nicolas\\Documents\\Nico\\Henry\\PI\\PI-Pokemon-main\\client\\src\\components\\Navbar\\Navbar.js":"4","C:\\Users\\Nicolas\\Documents\\Nico\\Henry\\PI\\PI-Pokemon-main\\client\\src\\components\\Navbar\\Search.js":"5","C:\\Users\\Nicolas\\Documents\\Nico\\Henry\\PI\\PI-Pokemon-main\\client\\src\\components\\Home\\Home.js":"6","C:\\Users\\Nicolas\\Documents\\Nico\\Henry\\PI\\PI-Pokemon-main\\client\\src\\components\\Pokemons\\Pokemons.js":"7","C:\\Users\\Nicolas\\Documents\\Nico\\Henry\\PI\\PI-Pokemon-main\\client\\src\\components\\Create\\Create.js":"8","C:\\Users\\Nicolas\\Documents\\Nico\\Henry\\PI\\PI-Pokemon-main\\client\\src\\components\\PokeCard\\PokeCard.js":"9","C:\\Users\\Nicolas\\Documents\\Nico\\Henry\\PI\\PI-Pokemon-main\\client\\src\\redux\\actions.js":"10","C:\\Users\\Nicolas\\Documents\\Nico\\Henry\\PI\\PI-Pokemon-main\\client\\src\\redux\\store.js":"11","C:\\Users\\Nicolas\\Documents\\Nico\\Henry\\PI\\PI-Pokemon-main\\client\\src\\redux\\reducer.js":"12","C:\\Users\\Nicolas\\Documents\\Nico\\Henry\\PI\\PI-Pokemon-main\\client\\src\\components\\Detail\\Detail.js":"13","C:\\Users\\Nicolas\\Documents\\Nico\\Henry\\PI\\PI-Pokemon-main\\client\\src\\components\\Filters\\Filters.js":"14","C:\\Users\\Nicolas\\Documents\\Nico\\Henry\\PI\\PI-Pokemon-main\\client\\src\\components\\Paging\\Paging.js":"15","C:\\Users\\Nicolas\\Documents\\Nico\\Henry\\PI\\PI-Pokemon-main\\client\\src\\components\\404\\Error.js":"16","C:\\Users\\Nicolas\\Documents\\Nico\\Henry\\PI\\PI-Pokemon-main\\client\\src\\components\\Detail\\Update.js":"17","C:\\Users\\Nicolas\\Documents\\Nico\\Henry\\PI\\PI-Pokemon-main\\client\\src\\components\\Detail\\MainDetail.js":"18","C:\\Users\\Nicolas\\Documents\\Nico\\Henry\\PI\\deployPoke\\client\\src\\index.js":"19","C:\\Users\\Nicolas\\Documents\\Nico\\Henry\\PI\\deployPoke\\client\\src\\App.js":"20","C:\\Users\\Nicolas\\Documents\\Nico\\Henry\\PI\\deployPoke\\client\\src\\reportWebVitals.js":"21","C:\\Users\\Nicolas\\Documents\\Nico\\Henry\\PI\\deployPoke\\client\\src\\redux\\store.js":"22","C:\\Users\\Nicolas\\Documents\\Nico\\Henry\\PI\\deployPoke\\client\\src\\redux\\reducer.js":"23","C:\\Users\\Nicolas\\Documents\\Nico\\Henry\\PI\\deployPoke\\client\\src\\components\\Detail\\Detail.js":"24","C:\\Users\\Nicolas\\Documents\\Nico\\Henry\\PI\\deployPoke\\client\\src\\components\\Create\\Create.js":"25","C:\\Users\\Nicolas\\Documents\\Nico\\Henry\\PI\\deployPoke\\client\\src\\components\\Home\\Home.js":"26","C:\\Users\\Nicolas\\Documents\\Nico\\Henry\\PI\\deployPoke\\client\\src\\components\\Pokemons\\Pokemons.js":"27","C:\\Users\\Nicolas\\Documents\\Nico\\Henry\\PI\\deployPoke\\client\\src\\components\\Navbar\\Navbar.js":"28","C:\\Users\\Nicolas\\Documents\\Nico\\Henry\\PI\\deployPoke\\client\\src\\components\\Detail\\Update.js":"29","C:\\Users\\Nicolas\\Documents\\Nico\\Henry\\PI\\deployPoke\\client\\src\\redux\\actions.js":"30","C:\\Users\\Nicolas\\Documents\\Nico\\Henry\\PI\\deployPoke\\client\\src\\components\\Navbar\\Search.js":"31","C:\\Users\\Nicolas\\Documents\\Nico\\Henry\\PI\\deployPoke\\client\\src\\components\\Paging\\Paging.js":"32","C:\\Users\\Nicolas\\Documents\\Nico\\Henry\\PI\\deployPoke\\client\\src\\components\\Filters\\Filters.js":"33","C:\\Users\\Nicolas\\Documents\\Nico\\Henry\\PI\\deployPoke\\client\\src\\components\\PokeCard\\PokeCard.js":"34"},{"size":720,"mtime":1674247990701,"results":"35","hashOfConfig":"36"},{"size":972,"mtime":1674246389123,"results":"37","hashOfConfig":"36"},{"size":362,"mtime":1653672168000,"results":"38","hashOfConfig":"36"},{"size":1027,"mtime":1675373918411,"results":"39","hashOfConfig":"36"},{"size":2300,"mtime":1686072999557,"results":"40","hashOfConfig":"36"},{"size":416,"mtime":1670872613400,"results":"41","hashOfConfig":"36"},{"size":3619,"mtime":1675096606160,"results":"42","hashOfConfig":"36"},{"size":10853,"mtime":1676148175391,"results":"43","hashOfConfig":"36"},{"size":619,"mtime":1673733312768,"results":"44","hashOfConfig":"36"},{"size":4849,"mtime":1686075086127,"results":"45","hashOfConfig":"36"},{"size":392,"mtime":1672491484953,"results":"46","hashOfConfig":"36"},{"size":9429,"mtime":1673982201415,"results":"47","hashOfConfig":"36"},{"size":4473,"mtime":1674249251122,"results":"48","hashOfConfig":"36"},{"size":5645,"mtime":1673969298784,"results":"49","hashOfConfig":"36"},{"size":1409,"mtime":1673796000828,"results":"50","hashOfConfig":"36"},{"size":519,"mtime":1673910759720,"results":"51","hashOfConfig":"36"},{"size":10399,"mtime":1673806586802,"results":"52","hashOfConfig":"36"},{"size":1250,"mtime":1673106569301,"results":"53","hashOfConfig":"54"},{"size":720,"mtime":1674247990701,"results":"55","hashOfConfig":"56"},{"size":972,"mtime":1674246389123,"results":"57","hashOfConfig":"56"},{"size":362,"mtime":1653672168000,"results":"58","hashOfConfig":"56"},{"size":392,"mtime":1672491484953,"results":"59","hashOfConfig":"56"},{"size":9429,"mtime":1673982201415,"results":"60","hashOfConfig":"56"},{"size":4473,"mtime":1674249251122,"results":"61","hashOfConfig":"56"},{"size":10853,"mtime":1676148175391,"results":"62","hashOfConfig":"56"},{"size":416,"mtime":1670872613400,"results":"63","hashOfConfig":"56"},{"size":3619,"mtime":1675096606160,"results":"64","hashOfConfig":"56"},{"size":1027,"mtime":1675373918411,"results":"65","hashOfConfig":"56"},{"size":10399,"mtime":1673806586802,"results":"66","hashOfConfig":"56"},{"size":4841,"mtime":1686084098786,"results":"67","hashOfConfig":"56"},{"size":2300,"mtime":1686072999557,"results":"68","hashOfConfig":"56"},{"size":1409,"mtime":1673796000828,"results":"69","hashOfConfig":"56"},{"size":5645,"mtime":1673969298784,"results":"70","hashOfConfig":"56"},{"size":619,"mtime":1673733312768,"results":"71","hashOfConfig":"56"},{"filePath":"72","messages":"73","suppressedMessages":"74","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"75"},"zyp4w",{"filePath":"76","messages":"77","suppressedMessages":"78","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"75"},{"filePath":"79","messages":"80","suppressedMessages":"81","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"75"},{"filePath":"82","messages":"83","suppressedMessages":"84","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"75"},{"filePath":"85","messages":"86","suppressedMessages":"87","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"88","messages":"89","suppressedMessages":"90","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"75"},{"filePath":"91","messages":"92","suppressedMessages":"93","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"75"},{"filePath":"94","messages":"95","suppressedMessages":"96","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"97","messages":"98","suppressedMessages":"99","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"75"},{"filePath":"100","messages":"101","suppressedMessages":"102","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"103","messages":"104","suppressedMessages":"105","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"75"},{"filePath":"106","messages":"107","suppressedMessages":"108","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"75"},{"filePath":"109","messages":"110","suppressedMessages":"111","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"75"},{"filePath":"112","messages":"113","suppressedMessages":"114","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"115","usedDeprecatedRules":"75"},{"filePath":"116","messages":"117","suppressedMessages":"118","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"75"},{"filePath":"119","messages":"120","suppressedMessages":"121","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"122","messages":"123","suppressedMessages":"124","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"125","usedDeprecatedRules":"75"},{"filePath":"126","messages":"127","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"11nvo4n",{"filePath":"128","messages":"129","suppressedMessages":"130","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"1y8v9yy",{"filePath":"131","messages":"132","suppressedMessages":"133","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"134","messages":"135","suppressedMessages":"136","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"137","messages":"138","suppressedMessages":"139","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"140","messages":"141","suppressedMessages":"142","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"143","messages":"144","suppressedMessages":"145","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"146","messages":"147","suppressedMessages":"148","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"149"},{"filePath":"150","messages":"151","suppressedMessages":"152","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"153","messages":"154","suppressedMessages":"155","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"156","messages":"157","suppressedMessages":"158","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"159","messages":"160","suppressedMessages":"161","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"125"},{"filePath":"162","messages":"163","suppressedMessages":"164","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"165","messages":"166","suppressedMessages":"167","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"168","messages":"169","suppressedMessages":"170","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"171","messages":"172","suppressedMessages":"173","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"115"},{"filePath":"174","messages":"175","suppressedMessages":"176","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"C:\\Users\\Nicolas\\Documents\\Nico\\Henry\\PI\\PI-Pokemon-main\\client\\src\\index.js",[],[],[],"C:\\Users\\Nicolas\\Documents\\Nico\\Henry\\PI\\PI-Pokemon-main\\client\\src\\App.js",[],[],"C:\\Users\\Nicolas\\Documents\\Nico\\Henry\\PI\\PI-Pokemon-main\\client\\src\\reportWebVitals.js",[],[],"C:\\Users\\Nicolas\\Documents\\Nico\\Henry\\PI\\PI-Pokemon-main\\client\\src\\components\\Navbar\\Navbar.js",[],[],"C:\\Users\\Nicolas\\Documents\\Nico\\Henry\\PI\\PI-Pokemon-main\\client\\src\\components\\Navbar\\Search.js",[],[],"C:\\Users\\Nicolas\\Documents\\Nico\\Henry\\PI\\PI-Pokemon-main\\client\\src\\components\\Home\\Home.js",[],[],"C:\\Users\\Nicolas\\Documents\\Nico\\Henry\\PI\\PI-Pokemon-main\\client\\src\\components\\Pokemons\\Pokemons.js",[],[],"C:\\Users\\Nicolas\\Documents\\Nico\\Henry\\PI\\PI-Pokemon-main\\client\\src\\components\\Create\\Create.js",["177","178","179"],[],"C:\\Users\\Nicolas\\Documents\\Nico\\Henry\\PI\\PI-Pokemon-main\\client\\src\\components\\PokeCard\\PokeCard.js",[],[],"C:\\Users\\Nicolas\\Documents\\Nico\\Henry\\PI\\PI-Pokemon-main\\client\\src\\redux\\actions.js",[],[],"C:\\Users\\Nicolas\\Documents\\Nico\\Henry\\PI\\PI-Pokemon-main\\client\\src\\redux\\store.js",[],[],"C:\\Users\\Nicolas\\Documents\\Nico\\Henry\\PI\\PI-Pokemon-main\\client\\src\\redux\\reducer.js",[],[],"C:\\Users\\Nicolas\\Documents\\Nico\\Henry\\PI\\PI-Pokemon-main\\client\\src\\components\\Detail\\Detail.js",[],[],"C:\\Users\\Nicolas\\Documents\\Nico\\Henry\\PI\\PI-Pokemon-main\\client\\src\\components\\Filters\\Filters.js",["180"],[],"import React, { useState } from \"react\";\r\nimport s from \"./Filters.module.css\";\r\n\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport * as actions from \"../../redux/actions\";\r\nimport { useHistory } from \"react-router-dom\";\r\n\r\nexport default function Filters({ setCurrentPage }) {\r\n  const [selectValue, setSelectValue] = React.useState(\"\"); //uso estos estados locales para mostrar al usuario los filtros q eligio\r\n  const [selectValueB, setSelectValueB] = React.useState(\"\");\r\n  const [orden, setOrden] = useState(\"\");\r\n  const [ordenB, setOrdenB] = useState(\"\");\r\n\r\n  const history = useHistory();\r\n  const dispatch = useDispatch();\r\n  const pokemons = useSelector((state) => state.pokemons); //traigo los estados globales\r\n  const types = useSelector((state) => state.types);\r\n  const sortTypes = types.sort((x, y) => x.name.localeCompare(y.name)); //ordeno types\r\n\r\n  React.useEffect(() => {\r\n    if (!pokemons[0]) {\r\n      dispatch(actions.getPokemons());\r\n      dispatch(actions.getTypes());\r\n    }\r\n  }, [dispatch, pokemons]);\r\n\r\n  function handleClick(e) { //reseta filters y va a page 1. Tb funciona para el search\r\n    e.preventDefault();\r\n    console.log(\"resetear filtros\");\r\n    dispatch(actions.getPokemons());\r\n    dispatch(actions.cleanFilter())\r\n    \r\n    setCurrentPage(1);\r\n    setSelectValue(\"\"); //blanquea los estados locales\r\n    setSelectValueB(\"\");\r\n    setOrden(\"\");\r\n    setOrdenB(\"\");\r\n  }\r\n\r\n  function handleFilterType(e) {\r\n    e.preventDefault();\r\n    const value = e.target.value;\r\n    setSelectValue(value); //para mostrarle a usuario lo que eligio\r\n    dispatch(actions.filterByType(value)); //disapara la action del reducer\r\n    //history.push(\"/pokemons\");\r\n    setCurrentPage(1);\r\n  }\r\n\r\n  function handleFilterCreated(e) {\r\n    e.preventDefault();\r\n    const value = e.target.value;\r\n    setSelectValueB(value);\r\n    dispatch(actions.filterByCreated(value));\r\n    setCurrentPage(1);\r\n  }\r\n\r\n  function handleSortByAlpha(e) {\r\n    e.preventDefault();\r\n    const value = e.target.value;\r\n    dispatch(actions.sortByAlphabet(value));\r\n    setOrden(`Sorted by ${value}`);\r\n    history.push(\"/pokemons\");\r\n    setCurrentPage(1);\r\n  }\r\n\r\n  function handleSortByAttack(e) {\r\n    e.preventDefault();\r\n    const value = e.target.value;\r\n    dispatch(actions.sortByAttack(value));\r\n    setOrdenB(`Sorted from ${value}`);\r\n    history.push(\"/pokemons\");\r\n    setCurrentPage(1);\r\n  }\r\n\r\n  return (\r\n    <div className={s.allSection}>\r\n      <div className={s.filterSection}>\r\n        <div className={s.filters}>\r\n          <h2 className={s.filterTitle}>Filters</h2>\r\n         \r\n          {/***FILTERS***/}\r\n          <div className={s.filterBy}> \r\n            <h3 className={s.filterSubitle}>Filter by type</h3>\r\n            <select\r\n              className={s.select}\r\n              value=\"default\"\r\n              onChange={(e) => handleFilterType(e)}\r\n            >\r\n              <option value=\"default\" disabled hidden>\r\n                Pokemon type\r\n              </option>\r\n              <option value=\"All\">All</option>\r\n              {types.map((type) => (\r\n                <option value={type.name} key={type.name}>\r\n                  {type.name[0].toUpperCase() + type.name.slice(1)}\r\n                </option>\r\n              ))}\r\n            </select>\r\n            {selectValue && <h3 className={s.showFilter}>{selectValue}</h3>}\r\n          </div>\r\n         \r\n          <div className={s.filterBy}>\r\n            <h3 className={s.filterSubitle}>Created in</h3>\r\n            <select\r\n              className={s.select}\r\n              value=\"default\"\r\n              onChange={(e) => handleFilterCreated(e)}\r\n            >\r\n              <option value=\"default\" disabled hidden>\r\n                Created in\r\n              </option>\r\n              <option value=\"All\">All</option>\r\n              <option value=\"API\">API</option>\r\n              <option value=\"Data Base\">Data Base</option>\r\n            </select>\r\n            {selectValueB && <h3 className={s.showFilter}>{selectValueB}</h3>}\r\n          </div>\r\n        </div>\r\n\r\n        {/***SORTS***/}\r\n        <div className={s.filters}>\r\n          <div className={s.filterBy}>\r\n            <h3 className={s.filterSubitle}>Sort by Alphabet</h3>\r\n            <select value=\"default\" onChange={(e) => handleSortByAlpha(e)}>\r\n              <option value=\"default\" disabled hidden>\r\n                Sort by Alphabet\r\n              </option>\r\n              <option value=\"a-z\" onClick={(e) => handleSortByAlpha(e)}>\r\n                From A to Z\r\n              </option>\r\n              <option value=\"z-a\" onClick={(e) => handleSortByAlpha(e)}>\r\n                From Z to A\r\n              </option>\r\n            </select>\r\n            {orden && <h3 className={s.showFilter}>{orden}</h3>}\r\n          </div>\r\n\r\n          <div className={s.filterBy}>\r\n            <h3 className={s.filterSubitle}>Sort by Attack</h3>\r\n            <select value=\"default\" onChange={(e) => handleSortByAttack(e)}>\r\n              <option value=\"default\" disabled hidden>\r\n                Sort by Attack\r\n              </option>\r\n              <option value=\"- to +\" onClick={(e) => handleSortByAlpha(e)}>\r\n                From - to +\r\n              </option>\r\n              <option value=\"+ to -\" onClick={(e) => handleSortByAlpha(e)}>\r\n                From + to -\r\n              </option>\r\n            </select>\r\n            {ordenB && <h3 className={s.showFilter}>{ordenB}</h3>}\r\n          </div>\r\n        </div>\r\n      </div>\r\n      \r\n      <button className={s.filterBtn} onClick={(e) => handleClick(e)}>\r\n        Reset filters\r\n      </button>\r\n    \r\n    </div>\r\n  );\r\n}\r\n","C:\\Users\\Nicolas\\Documents\\Nico\\Henry\\PI\\PI-Pokemon-main\\client\\src\\components\\Paging\\Paging.js",[],[],"C:\\Users\\Nicolas\\Documents\\Nico\\Henry\\PI\\PI-Pokemon-main\\client\\src\\components\\404\\Error.js",[],[],"C:\\Users\\Nicolas\\Documents\\Nico\\Henry\\PI\\PI-Pokemon-main\\client\\src\\components\\Detail\\Update.js",["181","182","183"],[],"import React, { useEffect, useState } from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { updatePokemon } from \"../../redux/actions\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport * as actions from \"../../redux/actions\";\r\nimport s from \"./Update.module.css\";\r\n\r\n//FUNCION VALIDADORA\r\nfunction validate(input){  //va a recibir el estado input con los cambios detectados por los handlers\r\n  let errors = {};  //objeto que guarda todos los errores y le agrego props con los nombres iguales a los del input\r\n  if(!input.name){                               \r\n      errors.name = 'a name is required';//al obj errors le agrego una prop name q tiene un mensaje como valor\r\n  }else if(!/^[A-z]+$/.test(input.name)){  //regex solo acepta letras\r\n      errors.name = 'only letters allowed'\r\n  }else if(!input.img){\r\n      errors.img = 'insert an url';\r\n  }else if(!/^https?:\\/\\/(?:www\\.)?[-a-zA-Z0-9@:%._\\+~#=]{1,256}\\.[a-zA-Z0-9()]{1,6}\\b(?:[-a-zA-Z0-9()@:%_\\+.~#?&\\/=]*)$/.test(input.img)){ \r\n      errors.img = 'only URL directions allowed'\r\n  }else if(input.hp < 1 || input.hp > 200){\r\n      errors.hp = 'must be a value between 1 and 200'\r\n  }else if(!/^[0-9]+$/.test(input.hp)){ \r\n      errors.hp = 'only numbers allowed'\r\n  }else if(input.attack < 1 || input.attack > 200){\r\n      errors.attack = 'must be a value between 1 and 200'\r\n  }else if(!/^[0-9]+$/.test(input.attack)){ \r\n      errors.attack = 'only numbers allowed'\r\n  }else if(input.defense < 1 || input.defense > 200){\r\n      errors.defense = 'must be a value between 1 and 200'\r\n  }else if(!/^[0-9]+$/.test(input.defense)){ \r\n      errors.defense = 'only numbers allowed'\r\n  }else if(input.speed < 1 || input.speed > 200){\r\n      errors.speed = 'must be a value between 1 and 200'\r\n  }else if(!/^[0-9]+$/.test(input.speed)){ \r\n      errors.speed = 'only numbers allowed'\r\n  }else if(input.height < 1 || input.height > 200){\r\n      errors.height = 'must be a value between 1 and 200'\r\n  }else if(!/^[0-9]+$/.test(input.height)){ \r\n      errors.height = 'only numbers allowed'\r\n  }else if(input.weight < 1 || input.weight > 200){\r\n      errors.weight = 'must be a value between 1 and 200'\r\n  }else if(!/^[0-9]+$/.test(input.weight)){ \r\n      errors.weight = 'only numbers allowed'\r\n  }else if(input.types.length < 1){\r\n      errors.types = 'select at least 1 type'\r\n  }\r\n      return errors; //retorna el obj errors con la prop y el string correspondiente.\r\n}\r\n\r\nexport default function Update(props) {\r\n  const pokemonDetail = useSelector((state) => state.pokemons.find((pokemon) => pokemon.id === props.match.params.id));\r\n  const types = useSelector((state) => state.types);\r\n  const dispatch = useDispatch();\r\n  const history = useHistory();\r\n  const [errors, setErrors] = useState({e:''}); \r\n  const [input, setInput] = useState({\r\n    id: props.match.params.id,\r\n    name: pokemonDetail.name,\r\n    attack: pokemonDetail.attack,\r\n    defense: pokemonDetail.defense,\r\n    speed: pokemonDetail.speed,\r\n    hp: pokemonDetail.hp,\r\n    height: pokemonDetail.height,\r\n    weight: pokemonDetail.weight,\r\n    img: pokemonDetail.img,\r\n    types: pokemonDetail.types,\r\n    createdInDB: true\r\n  });\r\n\r\n  const sortTypes = types.sort((x, y) => x.name.localeCompare(y.name));\r\n  console.log('sortTypes', sortTypes)\r\n\r\n  function handleSelect(e) {\r\n    if (!input.types.includes(e.target.value)) { //recibe el tipo que se seleccionó en el selector\r\n      //evita que se repitan los tipos\r\n      setInput({\r\n        ...input,\r\n        types: [...input.types, e.target.value], //al array de la prop types le añade el nuevo tipo que se seleccionó\r\n      });\r\n    }\r\n    setErrors(validate({\r\n      ...input,\r\n            types: [...input.types, e.target.value]\r\n    }))\r\n  }\r\n    \r\n  const handleSubmit = (e) => {\r\n    e.preventDefault();\r\n    const updatePoke = {\r\n      id: pokemonDetail.id,\r\n      name: input.name,\r\n      attack: input.attack,\r\n      defense: input.defense,\r\n      speed: input.speed,\r\n      hp: input.hp,\r\n      height: input.height,\r\n      weight: input.weight,\r\n      img: input.img,\r\n      types: input.types,\r\n      createdInDB: true\r\n    } \r\n    dispatch(updatePokemon(updatePoke));\r\n    history.push(`/pokemons/${props.match.params.id}`); //despues redirige para ver el poke\r\n    console.log('submit update')\r\n  };\r\n\r\n  const handleChange = (e) => {\r\n    setInput({\r\n      ...input,\r\n      [e.target.name]: e.target.value,\r\n    })\r\n    setErrors(validate({\r\n      ...input,\r\n      [e.target.name]: e.target.value,\r\n    }))\r\n  };\r\n\r\n  function handleDelete(el) { //para borrar el type con la x\r\n    setInput({\r\n      ...input,\r\n      types: input.types.filter((t) => t !== el), //filtra el array de la prop type, dejando pasar solo aquellos tipos que no coinciden con el clickeado\r\n    });\r\n  }\r\n\r\n  useEffect(() => {\r\n    dispatch(actions.getTypes()); //al montarse el comp me trae todos los tipos\r\n  }, [dispatch]);\r\n\r\n  return (\r\n    <div className={s.formSection}>\r\n      <h1>Edit your Pokemon</h1>\r\n      <form className={s.form} onSubmit={handleSubmit}>\r\n      <div className={s.inputs}>\r\n            <div className={s.input}>\r\n              <label htmlFor=\"name\">Name: </label>\r\n              <input\r\n                type=\"text\"\r\n                id=\"name\"\r\n                name=\"name\"\r\n                value={input.name}\r\n                onChange={(e) => handleChange(e)}\r\n              />\r\n               {errors.name && <p className={s.error}>{errors.name}</p>} {/*si el estado errors tiene la prop name, renderizo un parrafo con el string de esta prop */}\r\n            </div>\r\n            <div className={s.input}>\r\n              <label htmlFor=\"attack\">Attack: </label>\r\n              <input\r\n                type=\"number\"\r\n                min={0}\r\n                id=\"attack\"\r\n                name=\"attack\"\r\n                value={input.attack}\r\n                onChange={(e) => handleChange(e)}\r\n              />\r\n              {errors.attack && <p className={s.error}>{errors.attack}</p>}\r\n            </div>\r\n            <div className={s.input}>\r\n              <label htmlFor=\"defense\">Defense: </label>\r\n              <input\r\n                type=\"number\"\r\n                min={0}\r\n                id=\"defense\"\r\n                name=\"defense\"\r\n                value={input.defense}\r\n                onChange={(e) => handleChange(e)}\r\n              />\r\n               {errors.defense && <p className={s.error}>{errors.defense}</p>}\r\n            </div>\r\n            <div className={s.input}>\r\n              <label htmlFor=\"speed\">Speed: </label>\r\n              <input\r\n                type=\"number\"\r\n                min={0}\r\n                id=\"speed\"\r\n                name=\"speed\"\r\n                value={input.speed}\r\n                onChange={(e) => handleChange(e)}\r\n              />\r\n                {errors.speed && <p className={s.error}>{errors.speed}</p>}\r\n            </div>\r\n            <div className={s.input}>\r\n              <label htmlFor=\"hp\">Hp: </label>\r\n              <input\r\n                type=\"number\"\r\n                min={0}\r\n                id=\"hp\"\r\n                name=\"hp\"\r\n                value={input.hp}\r\n                onChange={(e) => handleChange(e)}\r\n              />\r\n                {errors.hp && <p className={s.error}>{errors.hp}</p>}\r\n            </div>\r\n            <div className={s.input}>\r\n              <label htmlFor=\"height\">Height: </label>\r\n              <input\r\n                type=\"number\"\r\n                min={0}\r\n                id=\"height\"\r\n                name=\"height\"\r\n                value={input.height}\r\n                onChange={(e) => handleChange(e)}\r\n              />\r\n                {errors.height && <p className={s.error}>{errors.height}</p>}\r\n            </div>\r\n            <div className={s.input}>\r\n              <label htmlFor=\"weight\">Weight: </label>\r\n              <input\r\n                type=\"number\"\r\n                min={0}\r\n                id=\"weight\"\r\n                name=\"weight\"\r\n                value={input.weight}\r\n                onChange={(e) => handleChange(e)}\r\n              />\r\n                {errors.weight && <p className={s.error}>{errors.weight}</p>}\r\n            </div>\r\n            <div className={s.input}>\r\n              <label htmlFor=\"img\">Image(url): </label>\r\n              <input\r\n                type=\"text\"\r\n                id=\"img\"\r\n                name=\"img\"\r\n                value={input.img}\r\n                onChange={(e) => handleChange(e)}\r\n              />\r\n                {errors.img && <p className={s.error}>{errors.img}</p>}\r\n            </div>\r\n\r\n            <div className={s.typeForm}>\r\n              {input.types.length < 2 ? ( \r\n                <select value=\"default\" onChange={(e) => handleSelect(e)}>\r\n                  <option value=\"default\" disabled hidden>\r\n                    Pokemon type\r\n                  </option>\r\n                  {types.map((type) => (\r\n                  <option value={type.name}>{type.name[0].toUpperCase() + type.name.slice(1)}</option>\r\n                 ))}\r\n                </select>\r\n              ) : ( //si ya eligio 2, no se muestran las opciones\r\n                <p className={s.error}>cannot have more than 2 types</p>\r\n              )}\r\n            </div>\r\n            {errors.types && <p className={s.error}>{errors.types}</p>}\r\n               \r\n            <div className={s.input}>\r\n              {input.types.map((el) => ( //Recorro el array de la prop type del input\r\n                  <div className={s.typeContent}>\r\n                    <p className={s.showType}>{el}</p>  {/*Se va a mostrar cada type seleccionado con un boton con una x*/}\r\n                    <button\r\n                      className={s.deleteType}\r\n                      type=\"button\"\r\n                      onClick={() => handleDelete(el)}\r\n                    >\r\n                      x  {/*cuando clickeo en X se ejecuta handleDelete*/}\r\n                    </button>\r\n                  </div>\r\n                )\r\n              )}\r\n            </div>\r\n          </div>\r\n          <div className={s.divBtn}>\r\n          {Object.keys(errors).length || !input.types.length ? \r\n              <button className={s.notSubmit} type='submit' disabled>please complete the form</button> : \r\n              <button className={s.formBtn} type='submit'>UPDATE</button> } \r\n          </div>\r\n      </form>\r\n    </div>\r\n  );\r\n}\r\n","C:\\Users\\Nicolas\\Documents\\Nico\\Henry\\PI\\PI-Pokemon-main\\client\\src\\components\\Detail\\MainDetail.js",[],"C:\\Users\\Nicolas\\Documents\\Nico\\Henry\\PI\\deployPoke\\client\\src\\index.js",[],[],"C:\\Users\\Nicolas\\Documents\\Nico\\Henry\\PI\\deployPoke\\client\\src\\App.js",[],[],"C:\\Users\\Nicolas\\Documents\\Nico\\Henry\\PI\\deployPoke\\client\\src\\reportWebVitals.js",[],[],"C:\\Users\\Nicolas\\Documents\\Nico\\Henry\\PI\\deployPoke\\client\\src\\redux\\store.js",[],[],"C:\\Users\\Nicolas\\Documents\\Nico\\Henry\\PI\\deployPoke\\client\\src\\redux\\reducer.js",[],[],"C:\\Users\\Nicolas\\Documents\\Nico\\Henry\\PI\\deployPoke\\client\\src\\components\\Detail\\Detail.js",[],[],"C:\\Users\\Nicolas\\Documents\\Nico\\Henry\\PI\\deployPoke\\client\\src\\components\\Create\\Create.js",["184","185","186"],[],"import React, { useEffect, useState } from \"react\";\r\nimport s from \"./Create.module.css\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport * as actions from \"../../redux/actions\";\r\n\r\n//FUNCION VALIDADORA\r\nfunction validate(input){  //va a recibir el estado input con los cambios detectados por los handlers\r\n    let errors = {};  //objeto que guarda todos los errores y le agrego props con los nombres iguales a los del input\r\n    if(!input.name){  //si imput no tiene una prop name                             \r\n        errors.name = 'a name is required';//al obj errors le agrego una prop name q tiene un mensaje como valor\r\n    }else if(!/^[A-z]+$/.test(input.name)){  //regex solo acepta letras\r\n        errors.name = 'only letters allowed'\r\n  }else if(!input.img){\r\n      errors.img = 'insert an url';\r\n  }else if(!/^https?:\\/\\/(?:www\\.)?[-a-zA-Z0-9@:%._\\+~#=]{1,256}\\.[a-zA-Z0-9()]{1,6}\\b(?:[-a-zA-Z0-9()@:%_\\+.~#?&\\/=]*)$/.test(input.img)){ \r\n      errors.img = 'only URL directions allowed'\r\n  }else if(input.hp < 1 || input.hp > 200){ //en los numericos reviso que esten entre esos valores\r\n      errors.hp = 'must be a value between 1 and 200'\r\n  }else if(!/^[0-9]+$/.test(input.hp)){ \r\n      errors.hp = 'only numbers allowed' //y que solo acepte numeros\r\n  }else if(input.attack < 1 || input.attack > 200){\r\n      errors.attack = 'must be a value between 1 and 200'\r\n  }else if(!/^[0-9]+$/.test(input.attack)){ \r\n      errors.attack = 'only numbers allowed'\r\n  }else if(input.defense < 1 || input.defense > 200){\r\n      errors.defense = 'must be a value between 1 and 200'\r\n  }else if(!/^[0-9]+$/.test(input.defense)){ \r\n      errors.defense = 'only numbers allowed'\r\n  }else if(input.speed < 1 || input.speed > 200){\r\n      errors.speed = 'must be a value between 1 and 200'\r\n  }else if(!/^[0-9]+$/.test(input.speed)){ \r\n      errors.speed = 'only numbers allowed'\r\n  }else if(input.height < 1 || input.height > 200){\r\n      errors.height = 'must be a value between 1 and 200'\r\n  }else if(!/^[0-9]+$/.test(input.height)){ \r\n      errors.height = 'only numbers allowed'\r\n  }else if(input.weight < 1 || input.weight > 200){\r\n      errors.weight = 'must be a value between 1 and 200'\r\n  }else if(!/^[0-9]+$/.test(input.weight)){ \r\n      errors.weight = 'only numbers allowed'\r\n  }else if(input.types.length < 1){ //tiene que haber al menos un type\r\n      errors.types = 'select at least 1 type'\r\n  }\r\n      return errors;  //se retorna el obj errors con la prop y el string correspondiente. ej: let errors ={name: 'a name is required'}\r\n}\r\n\r\nexport default function Create() {\r\n  const pokemons = useSelector((state)=> state.allPokemons);\r\n  const types = useSelector((state) => state.types);\r\n  const dispatch = useDispatch();\r\n  const history = useHistory();\r\n  const [errors, setErrors] = useState({e:''}); \r\n  const [input, setInput] = useState({\r\n    name: \"\",\r\n    attack: 0,\r\n    defense: 0,\r\n    speed: 0,\r\n    hp: 0,\r\n    height: 0,\r\n    weight: 0,\r\n    img: \"\",\r\n    types: [],\r\n    createdInDB: true\r\n  });\r\n\r\n  //para crear este error, primero necesitaba una func que busque el name. Asi no se puede crear un poke con un name = a uno existente\r\n  const findPoke = pokemons.find((poke) => poke.name.toLowerCase() === input.name.toLowerCase())\r\n  if(findPoke){\r\n    errors.name = 'That Pokemon already exist'\r\n  }\r\n \r\n  //Ordeno los types p/ que aparezcan ordenados en las opciones\r\n  const sortTypes = types.sort((x, y) => x.name.localeCompare(y.name));\r\n  console.log('sortTypes', sortTypes)\r\n\r\n  const handleChange = (e) => {\r\n    setInput({\r\n      ...input,\r\n      [e.target.name]: e.target.value,\r\n    })\r\n    setErrors(validate({\r\n      ...input,\r\n      [e.target.name]: e.target.value,\r\n    }))\r\n  };\r\n\r\n  function handleSelect(e) { //para los types necesito una func aparte\r\n    //recibe el type que se seleccionó en el selector\r\n    if (!input.types.includes(e.target.value)) {\r\n      //evita que se repitan los tipos\r\n      setInput({\r\n        ...input,\r\n        types: [...input.types, e.target.value], //al array de la prop types le añade el nuevo tipo que se seleccionó\r\n      });\r\n    }\r\n    setErrors(validate({\r\n      ...input,\r\n            types: [...input.types, e.target.value]\r\n    }))\r\n  }\r\n\r\n  const handleSubmit = (e) => {\r\n    e.preventDefault();\r\n    dispatch(actions.createPokemon(input));\r\n    console.log(\"form submited\");\r\n    setInput({//resetea el estado del input\r\n      name: \"\",\r\n      attack: 0,\r\n      defense: 0,\r\n      speed: 0,\r\n      hp: 0,\r\n      height: 0,\r\n      weight: 0,\r\n      img: \"\",\r\n      types: [],\r\n      createdInDB: true\r\n    });\r\n    history.push(\"/pokemons\"); //despues redirige para ver todos los poke\r\n  };\r\n\r\n  function handleDelete(el) { //la X activa un evento para borrar el type\r\n    setInput({\r\n      ...input,\r\n      types: input.types.filter((t) => t !== el), //se filtra el array de la prop type, dejando pasar solo aquellos tipos que no coinciden con el clickeado\r\n    });\r\n  }\r\n\r\n  useEffect(() => {\r\n    dispatch(actions.getTypes()); //al montarse el comp me trae todos los tipos\r\n  }, [dispatch]);\r\n\r\n  return (\r\n    <div className={s.formSection}>\r\n      <h2>Create your own Pokemon</h2>\r\n      <div className={s.form}>\r\n        <form action=\"POST\" onSubmit={(e) => handleSubmit(e)}>\r\n          <div className={s.inputs}>\r\n            <div className={s.input}>\r\n              <label htmlFor=\"name\">Name: </label>\r\n              <input\r\n                type=\"text\"\r\n                id=\"name\"\r\n                name=\"name\"\r\n                value={input.name}\r\n                onChange={(e) => handleChange(e)}\r\n              />\r\n               {errors.name && <p className={s.error}>{errors.name}</p>} {/*si el estado errors tiene la prop name, renderizo un parrafo con el string de esta prop */}\r\n            </div>\r\n            <div className={s.input}>\r\n              <label htmlFor=\"attack\">Attack: </label>\r\n              <input\r\n                type=\"number\"\r\n                min={0}\r\n                id=\"attack\"\r\n                name=\"attack\"\r\n                value={input.attack}\r\n                onChange={(e) => handleChange(e)}\r\n              />\r\n              {errors.attack && <p className={s.error}>{errors.attack}</p>}\r\n            </div>\r\n            <div className={s.input}>\r\n              <label htmlFor=\"defense\">Defense: </label>\r\n              <input\r\n                type=\"number\"\r\n                min={0}\r\n                id=\"defense\"\r\n                name=\"defense\"\r\n                value={input.defense}\r\n                onChange={(e) => handleChange(e)}\r\n              />\r\n               {errors.defense && <p className={s.error}>{errors.defense}</p>}\r\n            </div>\r\n            <div className={s.input}>\r\n              <label htmlFor=\"speed\">Speed: </label>\r\n              <input\r\n                type=\"number\"\r\n                min={0}\r\n                id=\"speed\"\r\n                name=\"speed\"\r\n                value={input.speed}\r\n                onChange={(e) => handleChange(e)}\r\n              />\r\n                {errors.speed && <p className={s.error}>{errors.speed}</p>}\r\n            </div>\r\n            <div className={s.input}>\r\n              <label htmlFor=\"hp\">Hp: </label>\r\n              <input\r\n                type=\"number\"\r\n                min={0}\r\n                id=\"hp\"\r\n                name=\"hp\"\r\n                value={input.hp}\r\n                onChange={(e) => handleChange(e)}\r\n              />\r\n                {errors.hp && <p className={s.error}>{errors.hp}</p>}\r\n            </div>\r\n            <div className={s.input}>\r\n              <label htmlFor=\"height\">Height: </label>\r\n              <input\r\n                type=\"number\"\r\n                min={0}\r\n                id=\"height\"\r\n                name=\"height\"\r\n                value={input.height}\r\n                onChange={(e) => handleChange(e)}\r\n              />\r\n                {errors.height && <p className={s.error}>{errors.height}</p>}\r\n            </div>\r\n            <div className={s.input}>\r\n              <label htmlFor=\"weight\">Weight: </label>\r\n              <input\r\n                type=\"number\"\r\n                min={0}\r\n                id=\"weight\"\r\n                name=\"weight\"\r\n                value={input.weight}\r\n                onChange={(e) => handleChange(e)}\r\n              />\r\n                {errors.weight && <p className={s.error}>{errors.weight}</p>}\r\n            </div>\r\n            <div className={s.input}>\r\n              <label htmlFor=\"img\">Image(url): </label>\r\n              <input\r\n                type=\"text\"\r\n                id=\"img\"\r\n                name=\"img\"\r\n                value={input.img}\r\n                onChange={(e) => handleChange(e)}\r\n              />\r\n                {errors.img && <p className={s.error}>{errors.img}</p>}\r\n            </div>\r\n\r\n            <div className={s.typeForm}>\r\n              {input.types.length < 2 ? ( //si hay menos de 2 types elegidos\r\n                <select value=\"default\" onChange={(e) => handleSelect(e)}>\r\n                  {/*Cuando se selecciona una opcion se ejecuta handleSelect con esa seleccion*/}\r\n                  <option value=\"default\" disabled hidden>\r\n                    Pokemon type\r\n                  </option>\r\n                  {types.map((type) => ( //mapeo todos los types\r\n                  <option value={type.name} key={type.name}>{type.name[0].toUpperCase() + type.name.slice(1)}</option>\r\n                 ))}\r\n                </select>\r\n              ) : ( //si ya eligio 2, no se muestran las opciones\r\n                <p className={s.error}>cannot have more than 2 types</p>\r\n              )}\r\n            </div>\r\n            {errors.types && <p className={s.error}>{errors.types}</p>}\r\n            <div className={s.input}>\r\n              {input.types.map((el, index) => ( //Recorro el array de la prop type del input. O sea, los elegidos\r\n                  <div className={s.typeContent} key={index}>\r\n                    <p className={s.showType}>{el}</p> {/*y los muestro junto con un boton X*/}\r\n                    <button\r\n                      className={s.deleteType}\r\n                      type=\"button\"\r\n                      onClick={() => handleDelete(el)}\r\n                    >\r\n                      x {/*cuando clickeo en X se ejecuta handleDelete*/}\r\n                    </button>\r\n                  </div>\r\n                )\r\n              )}\r\n            </div>\r\n          </div>\r\n          <div className={s.divBtn}>\r\n          {Object.keys(errors).length || !input.types.length ? \r\n              <button className={s.notSubmit} type='submit' disabled>please complete the form</button> : \r\n              <button className={s.formBtn} type='submit'>CREATE</button> } \r\n          </div>\r\n        </form>\r\n      </div>\r\n    </div>\r\n  );\r\n}","C:\\Users\\Nicolas\\Documents\\Nico\\Henry\\PI\\deployPoke\\client\\src\\components\\Home\\Home.js",[],[],"C:\\Users\\Nicolas\\Documents\\Nico\\Henry\\PI\\deployPoke\\client\\src\\components\\Pokemons\\Pokemons.js",[],[],"C:\\Users\\Nicolas\\Documents\\Nico\\Henry\\PI\\deployPoke\\client\\src\\components\\Navbar\\Navbar.js",[],[],"C:\\Users\\Nicolas\\Documents\\Nico\\Henry\\PI\\deployPoke\\client\\src\\components\\Detail\\Update.js",["187","188","189"],[],"C:\\Users\\Nicolas\\Documents\\Nico\\Henry\\PI\\deployPoke\\client\\src\\redux\\actions.js",[],[],"C:\\Users\\Nicolas\\Documents\\Nico\\Henry\\PI\\deployPoke\\client\\src\\components\\Navbar\\Search.js",[],[],"C:\\Users\\Nicolas\\Documents\\Nico\\Henry\\PI\\deployPoke\\client\\src\\components\\Paging\\Paging.js",[],[],"C:\\Users\\Nicolas\\Documents\\Nico\\Henry\\PI\\deployPoke\\client\\src\\components\\Filters\\Filters.js",["190"],[],"C:\\Users\\Nicolas\\Documents\\Nico\\Henry\\PI\\deployPoke\\client\\src\\components\\PokeCard\\PokeCard.js",[],[],{"ruleId":"191","severity":1,"message":"192","line":16,"column":52,"nodeType":"193","messageId":"194","endLine":16,"endColumn":53,"suggestions":"195"},{"ruleId":"191","severity":1,"message":"192","line":16,"column":107,"nodeType":"193","messageId":"194","endLine":16,"endColumn":108,"suggestions":"196"},{"ruleId":"191","severity":1,"message":"197","line":16,"column":114,"nodeType":"193","messageId":"194","endLine":16,"endColumn":115,"suggestions":"198"},{"ruleId":"199","severity":1,"message":"200","line":18,"column":9,"nodeType":"201","messageId":"202","endLine":18,"endColumn":18},{"ruleId":"191","severity":1,"message":"192","line":17,"column":52,"nodeType":"193","messageId":"194","endLine":17,"endColumn":53,"suggestions":"203"},{"ruleId":"191","severity":1,"message":"192","line":17,"column":107,"nodeType":"193","messageId":"194","endLine":17,"endColumn":108,"suggestions":"204"},{"ruleId":"191","severity":1,"message":"197","line":17,"column":114,"nodeType":"193","messageId":"194","endLine":17,"endColumn":115,"suggestions":"205"},{"ruleId":"191","severity":1,"message":"192","line":16,"column":52,"nodeType":"193","messageId":"194","endLine":16,"endColumn":53,"suggestions":"206"},{"ruleId":"191","severity":1,"message":"192","line":16,"column":107,"nodeType":"193","messageId":"194","endLine":16,"endColumn":108,"suggestions":"207"},{"ruleId":"191","severity":1,"message":"197","line":16,"column":114,"nodeType":"193","messageId":"194","endLine":16,"endColumn":115,"suggestions":"208"},{"ruleId":"191","severity":1,"message":"192","line":17,"column":52,"nodeType":"193","messageId":"194","endLine":17,"endColumn":53,"suggestions":"209"},{"ruleId":"191","severity":1,"message":"192","line":17,"column":107,"nodeType":"193","messageId":"194","endLine":17,"endColumn":108,"suggestions":"210"},{"ruleId":"191","severity":1,"message":"197","line":17,"column":114,"nodeType":"193","messageId":"194","endLine":17,"endColumn":115,"suggestions":"211"},{"ruleId":"199","severity":1,"message":"200","line":18,"column":9,"nodeType":"201","messageId":"202","endLine":18,"endColumn":18},"no-useless-escape","Unnecessary escape character: \\+.","Literal","unnecessaryEscape",["212","213"],["214","215"],"Unnecessary escape character: \\/.",["216","217"],"no-unused-vars","'sortTypes' is assigned a value but never used.","Identifier","unusedVar",["218","219"],["220","221"],["222","223"],["224","225"],["226","227"],["228","229"],["230","231"],["232","233"],["234","235"],{"messageId":"236","fix":"237","desc":"238"},{"messageId":"239","fix":"240","desc":"241"},{"messageId":"236","fix":"242","desc":"238"},{"messageId":"239","fix":"243","desc":"241"},{"messageId":"236","fix":"244","desc":"238"},{"messageId":"239","fix":"245","desc":"241"},{"messageId":"236","fix":"246","desc":"238"},{"messageId":"239","fix":"247","desc":"241"},{"messageId":"236","fix":"248","desc":"238"},{"messageId":"239","fix":"249","desc":"241"},{"messageId":"236","fix":"250","desc":"238"},{"messageId":"239","fix":"251","desc":"241"},{"messageId":"236","fix":"252","desc":"238"},{"messageId":"239","fix":"253","desc":"241"},{"messageId":"236","fix":"254","desc":"238"},{"messageId":"239","fix":"255","desc":"241"},{"messageId":"236","fix":"256","desc":"238"},{"messageId":"239","fix":"257","desc":"241"},{"messageId":"236","fix":"258","desc":"238"},{"messageId":"239","fix":"259","desc":"241"},{"messageId":"236","fix":"260","desc":"238"},{"messageId":"239","fix":"261","desc":"241"},{"messageId":"236","fix":"262","desc":"238"},{"messageId":"239","fix":"263","desc":"241"},"removeEscape",{"range":"264","text":"265"},"Remove the `\\`. This maintains the current functionality.","escapeBackslash",{"range":"266","text":"267"},"Replace the `\\` with `\\\\` to include the actual backslash character.",{"range":"268","text":"265"},{"range":"269","text":"267"},{"range":"270","text":"265"},{"range":"271","text":"267"},{"range":"272","text":"265"},{"range":"273","text":"267"},{"range":"274","text":"265"},{"range":"275","text":"267"},{"range":"276","text":"265"},{"range":"277","text":"267"},{"range":"278","text":"265"},{"range":"279","text":"267"},{"range":"280","text":"265"},{"range":"281","text":"267"},{"range":"282","text":"265"},{"range":"283","text":"267"},{"range":"284","text":"265"},{"range":"285","text":"267"},{"range":"286","text":"265"},{"range":"287","text":"267"},{"range":"288","text":"265"},{"range":"289","text":"267"},[923,924],"",[923,923],"\\",[978,979],[978,978],[985,986],[985,985],[934,935],[934,934],[989,990],[989,989],[996,997],[996,996],[923,924],[923,923],[978,979],[978,978],[985,986],[985,985],[934,935],[934,934],[989,990],[989,989],[996,997],[996,996]]